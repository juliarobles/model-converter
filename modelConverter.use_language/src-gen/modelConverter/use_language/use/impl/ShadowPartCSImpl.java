/**
 * generated by Xtext 2.25.0
 */
package modelConverter.use_language.use.impl;

import modelConverter.use_language.use.ShadowPartCS;
import modelConverter.use_language.use.UsePackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Shadow Part CS</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link modelConverter.use_language.use.impl.ShadowPartCSImpl#getReferredProperty <em>Referred Property</em>}</li>
 *   <li>{@link modelConverter.use_language.use.impl.ShadowPartCSImpl#getOwnedInitExpression <em>Owned Init Expression</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ShadowPartCSImpl extends MinimalEObjectImpl.Container implements ShadowPartCS
{
  /**
   * The default value of the '{@link #getReferredProperty() <em>Referred Property</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReferredProperty()
   * @generated
   * @ordered
   */
  protected static final String REFERRED_PROPERTY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReferredProperty() <em>Referred Property</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReferredProperty()
   * @generated
   * @ordered
   */
  protected String referredProperty = REFERRED_PROPERTY_EDEFAULT;

  /**
   * The cached value of the '{@link #getOwnedInitExpression() <em>Owned Init Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedInitExpression()
   * @generated
   * @ordered
   */
  protected EObject ownedInitExpression;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ShadowPartCSImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UsePackage.Literals.SHADOW_PART_CS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReferredProperty()
  {
    return referredProperty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReferredProperty(String newReferredProperty)
  {
    String oldReferredProperty = referredProperty;
    referredProperty = newReferredProperty;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UsePackage.SHADOW_PART_CS__REFERRED_PROPERTY, oldReferredProperty, referredProperty));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject getOwnedInitExpression()
  {
    return ownedInitExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOwnedInitExpression(EObject newOwnedInitExpression, NotificationChain msgs)
  {
    EObject oldOwnedInitExpression = ownedInitExpression;
    ownedInitExpression = newOwnedInitExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UsePackage.SHADOW_PART_CS__OWNED_INIT_EXPRESSION, oldOwnedInitExpression, newOwnedInitExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOwnedInitExpression(EObject newOwnedInitExpression)
  {
    if (newOwnedInitExpression != ownedInitExpression)
    {
      NotificationChain msgs = null;
      if (ownedInitExpression != null)
        msgs = ((InternalEObject)ownedInitExpression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UsePackage.SHADOW_PART_CS__OWNED_INIT_EXPRESSION, null, msgs);
      if (newOwnedInitExpression != null)
        msgs = ((InternalEObject)newOwnedInitExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UsePackage.SHADOW_PART_CS__OWNED_INIT_EXPRESSION, null, msgs);
      msgs = basicSetOwnedInitExpression(newOwnedInitExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UsePackage.SHADOW_PART_CS__OWNED_INIT_EXPRESSION, newOwnedInitExpression, newOwnedInitExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case UsePackage.SHADOW_PART_CS__OWNED_INIT_EXPRESSION:
        return basicSetOwnedInitExpression(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UsePackage.SHADOW_PART_CS__REFERRED_PROPERTY:
        return getReferredProperty();
      case UsePackage.SHADOW_PART_CS__OWNED_INIT_EXPRESSION:
        return getOwnedInitExpression();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UsePackage.SHADOW_PART_CS__REFERRED_PROPERTY:
        setReferredProperty((String)newValue);
        return;
      case UsePackage.SHADOW_PART_CS__OWNED_INIT_EXPRESSION:
        setOwnedInitExpression((EObject)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UsePackage.SHADOW_PART_CS__REFERRED_PROPERTY:
        setReferredProperty(REFERRED_PROPERTY_EDEFAULT);
        return;
      case UsePackage.SHADOW_PART_CS__OWNED_INIT_EXPRESSION:
        setOwnedInitExpression((EObject)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UsePackage.SHADOW_PART_CS__REFERRED_PROPERTY:
        return REFERRED_PROPERTY_EDEFAULT == null ? referredProperty != null : !REFERRED_PROPERTY_EDEFAULT.equals(referredProperty);
      case UsePackage.SHADOW_PART_CS__OWNED_INIT_EXPRESSION:
        return ownedInitExpression != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (referredProperty: ");
    result.append(referredProperty);
    result.append(')');
    return result.toString();
  }

} //ShadowPartCSImpl
