/**
 * generated by Xtext 2.25.0
 */
package modelConverter.use_language.use;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see modelConverter.use_language.use.UseFactory
 * @model kind="package"
 * @generated
 */
public interface UsePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "use";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.USE.lenguage_use_xtext";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "use";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  UsePackage eINSTANCE = modelConverter.use_language.use.impl.UsePackageImpl.init();

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ModelUSEImpl <em>Model USE</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ModelUSEImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getModelUSE()
   * @generated
   */
  int MODEL_USE = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_USE__NAME = 0;

  /**
   * The feature id for the '<em><b>Enums</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_USE__ENUMS = 1;

  /**
   * The feature id for the '<em><b>Packaged Element</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_USE__PACKAGED_ELEMENT = 2;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_USE__CONSTRAINTS = 3;

  /**
   * The number of structural features of the '<em>Model USE</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_USE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.MultiplicityImpl <em>Multiplicity</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.MultiplicityImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getMultiplicity()
   * @generated
   */
  int MULTIPLICITY = 1;

  /**
   * The feature id for the '<em><b>Min Value</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY__MIN_VALUE = 0;

  /**
   * The feature id for the '<em><b>Max Value</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY__MAX_VALUE = 1;

  /**
   * The number of structural features of the '<em>Multiplicity</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AllTypesImpl <em>All Types</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AllTypesImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAllTypes()
   * @generated
   */
  int ALL_TYPES = 2;

  /**
   * The number of structural features of the '<em>All Types</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_TYPES_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.TypeImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getType()
   * @generated
   */
  int TYPE = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__NAME = 0;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.CollectionTypeImpl <em>Collection Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.CollectionTypeImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getCollectionType()
   * @generated
   */
  int COLLECTION_TYPE = 4;

  /**
   * The feature id for the '<em><b>Collection</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_TYPE__COLLECTION = ALL_TYPES_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_TYPE__TYPE = ALL_TYPES_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Collection Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_TYPE_FEATURE_COUNT = ALL_TYPES_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AllClassAndEnumImpl <em>All Class And Enum</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AllClassAndEnumImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAllClassAndEnum()
   * @generated
   */
  int ALL_CLASS_AND_ENUM = 6;

  /**
   * The number of structural features of the '<em>All Class And Enum</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_CLASS_AND_ENUM_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AllClassImpl <em>All Class</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AllClassImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAllClass()
   * @generated
   */
  int ALL_CLASS = 5;

  /**
   * The number of structural features of the '<em>All Class</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_CLASS_FEATURE_COUNT = ALL_CLASS_AND_ENUM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.SimpleTypesImpl <em>Simple Types</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.SimpleTypesImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getSimpleTypes()
   * @generated
   */
  int SIMPLE_TYPES = 7;

  /**
   * The feature id for the '<em><b>Default Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPES__DEFAULT_TYPE = ALL_TYPES_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Referended</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPES__REFERENDED = ALL_TYPES_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Simple Types</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPES_FEATURE_COUNT = ALL_TYPES_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.EnumImpl <em>Enum</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.EnumImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getEnum()
   * @generated
   */
  int ENUM = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUM__NAME = ALL_CLASS_AND_ENUM_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUM__ELEMENTS = ALL_CLASS_AND_ENUM_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Enum</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUM_FEATURE_COUNT = ALL_CLASS_AND_ENUM_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ClassImpl <em>Class</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ClassImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getClass_()
   * @generated
   */
  int CLASS = 9;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Abstract</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__ABSTRACT = TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Generalization</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__GENERALIZATION = TYPE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Attributes</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__ATTRIBUTES = TYPE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Operations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__OPERATIONS = TYPE_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__CONSTRAINTS = TYPE_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Statemachines</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__STATEMACHINES = TYPE_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>Class</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_FEATURE_COUNT = TYPE_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.GeneralizationImpl <em>Generalization</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.GeneralizationImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getGeneralization()
   * @generated
   */
  int GENERALIZATION = 10;

  /**
   * The feature id for the '<em><b>General</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GENERALIZATION__GENERAL = 0;

  /**
   * The number of structural features of the '<em>Generalization</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GENERALIZATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AssociationImpl <em>Association</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AssociationImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAssociation()
   * @generated
   */
  int ASSOCIATION = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Type Association</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__TYPE_ASSOCIATION = TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Association Ends</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__ASSOCIATION_ENDS = TYPE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Association</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_FEATURE_COUNT = TYPE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AssociationEndImpl <em>Association End</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AssociationEndImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAssociationEnd()
   * @generated
   */
  int ASSOCIATION_END = 12;

  /**
   * The feature id for the '<em><b>Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_END__TYPE = 0;

  /**
   * The feature id for the '<em><b>Mul</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_END__MUL = 1;

  /**
   * The feature id for the '<em><b>Role</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_END__ROLE = 2;

  /**
   * The feature id for the '<em><b>Ordered</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_END__ORDERED = 3;

  /**
   * The number of structural features of the '<em>Association End</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_END_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AssociationClassImpl <em>Association Class</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AssociationClassImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAssociationClass()
   * @generated
   */
  int ASSOCIATION_CLASS = 13;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Abstract</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__ABSTRACT = TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Generalization</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__GENERALIZATION = TYPE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Association Ends</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__ASSOCIATION_ENDS = TYPE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Attributes</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__ATTRIBUTES = TYPE_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Operations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__OPERATIONS = TYPE_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__CONSTRAINTS = TYPE_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Statemachines</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__STATEMACHINES = TYPE_FEATURE_COUNT + 6;

  /**
   * The number of structural features of the '<em>Association Class</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS_FEATURE_COUNT = TYPE_FEATURE_COUNT + 7;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AttributesBaseImpl <em>Attributes Base</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AttributesBaseImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAttributesBase()
   * @generated
   */
  int ATTRIBUTES_BASE = 14;

  /**
   * The feature id for the '<em><b>Attributes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTES_BASE__ATTRIBUTES = 0;

  /**
   * The number of structural features of the '<em>Attributes Base</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTES_BASE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AttributeImpl <em>Attribute</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AttributeImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAttribute()
   * @generated
   */
  int ATTRIBUTE = 15;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__TYPE = 1;

  /**
   * The feature id for the '<em><b>Init OCL</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__INIT_OCL = 2;

  /**
   * The feature id for the '<em><b>Derive OCL</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__DERIVE_OCL = 3;

  /**
   * The number of structural features of the '<em>Attribute</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationsBaseImpl <em>Operations Base</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationsBaseImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationsBase()
   * @generated
   */
  int OPERATIONS_BASE = 16;

  /**
   * The feature id for the '<em><b>Operations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_BASE__OPERATIONS = 0;

  /**
   * The number of structural features of the '<em>Operations Base</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_BASE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationTypeImpl <em>Operation Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationTypeImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationType()
   * @generated
   */
  int OPERATION_TYPE = 17;

  /**
   * The feature id for the '<em><b>Operation Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_TYPE__OPERATION_DECLARATION = 0;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_TYPE__CONDITIONS = 1;

  /**
   * The number of structural features of the '<em>Operation Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationQueryImpl <em>Operation Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationQueryImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationQuery()
   * @generated
   */
  int OPERATION_QUERY = 18;

  /**
   * The feature id for the '<em><b>Operation Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_QUERY__OPERATION_DECLARATION = OPERATION_TYPE__OPERATION_DECLARATION;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_QUERY__CONDITIONS = OPERATION_TYPE__CONDITIONS;

  /**
   * The feature id for the '<em><b>Operationbody</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_QUERY__OPERATIONBODY = OPERATION_TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Operation Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_QUERY_FEATURE_COUNT = OPERATION_TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationComplexImpl <em>Operation Complex</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationComplexImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationComplex()
   * @generated
   */
  int OPERATION_COMPLEX = 19;

  /**
   * The feature id for the '<em><b>Operation Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_COMPLEX__OPERATION_DECLARATION = OPERATION_TYPE__OPERATION_DECLARATION;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_COMPLEX__CONDITIONS = OPERATION_TYPE__CONDITIONS;

  /**
   * The feature id for the '<em><b>Operationbody</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_COMPLEX__OPERATIONBODY = OPERATION_TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Operation Complex</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_COMPLEX_FEATURE_COUNT = OPERATION_TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationDeclarationImpl <em>Operation Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationDeclarationImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationDeclaration()
   * @generated
   */
  int OPERATION_DECLARATION = 20;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_DECLARATION__NAME = 0;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_DECLARATION__PARAMETERS = 1;

  /**
   * The feature id for the '<em><b>Return Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_DECLARATION__RETURN_TYPE = 2;

  /**
   * The number of structural features of the '<em>Operation Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_DECLARATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ParameterImpl <em>Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ParameterImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getParameter()
   * @generated
   */
  int PARAMETER = 21;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER__TYPE = 1;

  /**
   * The number of structural features of the '<em>Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.StateMachinesBaseImpl <em>State Machines Base</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.StateMachinesBaseImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getStateMachinesBase()
   * @generated
   */
  int STATE_MACHINES_BASE = 22;

  /**
   * The feature id for the '<em><b>Statemachines</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_MACHINES_BASE__STATEMACHINES = 0;

  /**
   * The number of structural features of the '<em>State Machines Base</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_MACHINES_BASE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.StateMachineImpl <em>State Machine</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.StateMachineImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getStateMachine()
   * @generated
   */
  int STATE_MACHINE = 23;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_MACHINE__NAME = 0;

  /**
   * The feature id for the '<em><b>States</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_MACHINE__STATES = 1;

  /**
   * The feature id for the '<em><b>Transitions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_MACHINE__TRANSITIONS = 2;

  /**
   * The number of structural features of the '<em>State Machine</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_MACHINE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.StateImpl <em>State</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.StateImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getState()
   * @generated
   */
  int STATE = 24;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE__NAME = 0;

  /**
   * The feature id for the '<em><b>Is Initial</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE__IS_INITIAL = 1;

  /**
   * The feature id for the '<em><b>Is Final</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE__IS_FINAL = 2;

  /**
   * The feature id for the '<em><b>Invariant</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE__INVARIANT = 3;

  /**
   * The number of structural features of the '<em>State</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.TransitionImpl <em>Transition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.TransitionImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getTransition()
   * @generated
   */
  int TRANSITION = 25;

  /**
   * The feature id for the '<em><b>Source</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSITION__SOURCE = 0;

  /**
   * The feature id for the '<em><b>Target</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSITION__TARGET = 1;

  /**
   * The feature id for the '<em><b>Precondition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSITION__PRECONDITION = 2;

  /**
   * The feature id for the '<em><b>Operation</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSITION__OPERATION = 3;

  /**
   * The feature id for the '<em><b>Postcondition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSITION__POSTCONDITION = 4;

  /**
   * The number of structural features of the '<em>Transition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSITION_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ConstraintsBaseImpl <em>Constraints Base</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ConstraintsBaseImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getConstraintsBase()
   * @generated
   */
  int CONSTRAINTS_BASE = 26;

  /**
   * The feature id for the '<em><b>Invariants</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINTS_BASE__INVARIANTS = 0;

  /**
   * The number of structural features of the '<em>Constraints Base</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINTS_BASE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ConstrainsGeneralImpl <em>Constrains General</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ConstrainsGeneralImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getConstrainsGeneral()
   * @generated
   */
  int CONSTRAINS_GENERAL = 27;

  /**
   * The feature id for the '<em><b>Contexts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINS_GENERAL__CONTEXTS = 0;

  /**
   * The number of structural features of the '<em>Constrains General</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINS_GENERAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ContextsTypeImpl <em>Contexts Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ContextsTypeImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getContextsType()
   * @generated
   */
  int CONTEXTS_TYPE = 28;

  /**
   * The feature id for the '<em><b>Classname</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTEXTS_TYPE__CLASSNAME = 0;

  /**
   * The number of structural features of the '<em>Contexts Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTEXTS_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.InvariantContextImpl <em>Invariant Context</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.InvariantContextImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getInvariantContext()
   * @generated
   */
  int INVARIANT_CONTEXT = 29;

  /**
   * The feature id for the '<em><b>Classname</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_CONTEXT__CLASSNAME = CONTEXTS_TYPE__CLASSNAME;

  /**
   * The feature id for the '<em><b>Variablename</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_CONTEXT__VARIABLENAME = CONTEXTS_TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Invariants</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_CONTEXT__INVARIANTS = CONTEXTS_TYPE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Invariant Context</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_CONTEXT_FEATURE_COUNT = CONTEXTS_TYPE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.InvariantDefinitionImpl <em>Invariant Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.InvariantDefinitionImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getInvariantDefinition()
   * @generated
   */
  int INVARIANT_DEFINITION = 30;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_DEFINITION__NAME = 0;

  /**
   * The feature id for the '<em><b>Oclexpression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_DEFINITION__OCLEXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Invariant Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationContextImpl <em>Operation Context</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationContextImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationContext()
   * @generated
   */
  int OPERATION_CONTEXT = 31;

  /**
   * The feature id for the '<em><b>Classname</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CONTEXT__CLASSNAME = CONTEXTS_TYPE__CLASSNAME;

  /**
   * The feature id for the '<em><b>Constrains</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CONTEXT__CONSTRAINS = CONTEXTS_TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Operation Context</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CONTEXT_FEATURE_COUNT = CONTEXTS_TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationConstraintsImpl <em>Operation Constraints</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationConstraintsImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationConstraints()
   * @generated
   */
  int OPERATION_CONSTRAINTS = 32;

  /**
   * The feature id for the '<em><b>Operation Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CONSTRAINTS__OPERATION_DECLARATION = 0;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CONSTRAINTS__CONDITIONS = 1;

  /**
   * The number of structural features of the '<em>Operation Constraints</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CONSTRAINTS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ConditionTypeImpl <em>Condition Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ConditionTypeImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getConditionType()
   * @generated
   */
  int CONDITION_TYPE = 33;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Oclexpression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_TYPE__OCLEXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Condition Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.PreconditionImpl <em>Precondition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.PreconditionImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getPrecondition()
   * @generated
   */
  int PRECONDITION = 34;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECONDITION__NAME = CONDITION_TYPE__NAME;

  /**
   * The feature id for the '<em><b>Oclexpression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECONDITION__OCLEXPRESSION = CONDITION_TYPE__OCLEXPRESSION;

  /**
   * The number of structural features of the '<em>Precondition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECONDITION_FEATURE_COUNT = CONDITION_TYPE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.PostconditionImpl <em>Postcondition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.PostconditionImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getPostcondition()
   * @generated
   */
  int POSTCONDITION = 35;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSTCONDITION__NAME = CONDITION_TYPE__NAME;

  /**
   * The feature id for the '<em><b>Oclexpression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSTCONDITION__OCLEXPRESSION = CONDITION_TYPE__OCLEXPRESSION;

  /**
   * The number of structural features of the '<em>Postcondition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSTCONDITION_FEATURE_COUNT = CONDITION_TYPE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.TypedRefCSImpl <em>Typed Ref CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.TypedRefCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getTypedRefCS()
   * @generated
   */
  int TYPED_REF_CS = 43;

  /**
   * The feature id for the '<em><b>Owned Multiplicity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPED_REF_CS__OWNED_MULTIPLICITY = 0;

  /**
   * The number of structural features of the '<em>Typed Ref CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPED_REF_CS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.PrimitiveTypeRefCSImpl <em>Primitive Type Ref CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.PrimitiveTypeRefCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getPrimitiveTypeRefCS()
   * @generated
   */
  int PRIMITIVE_TYPE_REF_CS = 36;

  /**
   * The feature id for the '<em><b>Owned Multiplicity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE_TYPE_REF_CS__OWNED_MULTIPLICITY = TYPED_REF_CS__OWNED_MULTIPLICITY;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE_TYPE_REF_CS__NAME = TYPED_REF_CS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Primitive Type Ref CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE_TYPE_REF_CS_FEATURE_COUNT = TYPED_REF_CS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.CollectionTypeCSImpl <em>Collection Type CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.CollectionTypeCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getCollectionTypeCS()
   * @generated
   */
  int COLLECTION_TYPE_CS = 37;

  /**
   * The feature id for the '<em><b>Owned Multiplicity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_TYPE_CS__OWNED_MULTIPLICITY = TYPED_REF_CS__OWNED_MULTIPLICITY;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_TYPE_CS__NAME = TYPED_REF_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Owned Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_TYPE_CS__OWNED_TYPE = TYPED_REF_CS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Owned Collection Multiplicity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_TYPE_CS__OWNED_COLLECTION_MULTIPLICITY = TYPED_REF_CS_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Collection Type CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_TYPE_CS_FEATURE_COUNT = TYPED_REF_CS_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.MapTypeCSImpl <em>Map Type CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.MapTypeCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getMapTypeCS()
   * @generated
   */
  int MAP_TYPE_CS = 38;

  /**
   * The feature id for the '<em><b>Owned Multiplicity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_TYPE_CS__OWNED_MULTIPLICITY = TYPED_REF_CS__OWNED_MULTIPLICITY;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_TYPE_CS__NAME = TYPED_REF_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Owned Key Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_TYPE_CS__OWNED_KEY_TYPE = TYPED_REF_CS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Owned Value Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_TYPE_CS__OWNED_VALUE_TYPE = TYPED_REF_CS_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Map Type CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_TYPE_CS_FEATURE_COUNT = TYPED_REF_CS_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.TupleTypeCSImpl <em>Tuple Type CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.TupleTypeCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getTupleTypeCS()
   * @generated
   */
  int TUPLE_TYPE_CS = 39;

  /**
   * The feature id for the '<em><b>Owned Multiplicity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_TYPE_CS__OWNED_MULTIPLICITY = TYPED_REF_CS__OWNED_MULTIPLICITY;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_TYPE_CS__NAME = TYPED_REF_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Owned Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_TYPE_CS__OWNED_PARTS = TYPED_REF_CS_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Tuple Type CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_TYPE_CS_FEATURE_COUNT = TYPED_REF_CS_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.TuplePartCSImpl <em>Tuple Part CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.TuplePartCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getTuplePartCS()
   * @generated
   */
  int TUPLE_PART_CS = 40;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_PART_CS__NAME = 0;

  /**
   * The feature id for the '<em><b>Owned Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_PART_CS__OWNED_TYPE = 1;

  /**
   * The number of structural features of the '<em>Tuple Part CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_PART_CS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.CollectionPatternCSImpl <em>Collection Pattern CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.CollectionPatternCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getCollectionPatternCS()
   * @generated
   */
  int COLLECTION_PATTERN_CS = 41;

  /**
   * The feature id for the '<em><b>Owned Multiplicity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_PATTERN_CS__OWNED_MULTIPLICITY = TYPED_REF_CS__OWNED_MULTIPLICITY;

  /**
   * The feature id for the '<em><b>Owned Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_PATTERN_CS__OWNED_TYPE = TYPED_REF_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Owned Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_PATTERN_CS__OWNED_PARTS = TYPED_REF_CS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Rest Variable Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_PATTERN_CS__REST_VARIABLE_NAME = TYPED_REF_CS_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Collection Pattern CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_PATTERN_CS_FEATURE_COUNT = TYPED_REF_CS_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.PatternExpCSImpl <em>Pattern Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.PatternExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getPatternExpCS()
   * @generated
   */
  int PATTERN_EXP_CS = 42;

  /**
   * The feature id for the '<em><b>Pattern Variable Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_EXP_CS__PATTERN_VARIABLE_NAME = 0;

  /**
   * The feature id for the '<em><b>Owned Pattern Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_EXP_CS__OWNED_PATTERN_TYPE = 1;

  /**
   * The number of structural features of the '<em>Pattern Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_EXP_CS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ExpCSImpl <em>Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getExpCS()
   * @generated
   */
  int EXP_CS = 53;

  /**
   * The number of structural features of the '<em>Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXP_CS_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.TypeLiteralExpCSImpl <em>Type Literal Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.TypeLiteralExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getTypeLiteralExpCS()
   * @generated
   */
  int TYPE_LITERAL_EXP_CS = 44;

  /**
   * The feature id for the '<em><b>Owned Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_LITERAL_EXP_CS__OWNED_TYPE = EXP_CS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Type Literal Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_LITERAL_EXP_CS_FEATURE_COUNT = EXP_CS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.TypeNameExpCSImpl <em>Type Name Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.TypeNameExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getTypeNameExpCS()
   * @generated
   */
  int TYPE_NAME_EXP_CS = 45;

  /**
   * The feature id for the '<em><b>Owned Multiplicity</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_NAME_EXP_CS__OWNED_MULTIPLICITY = TYPED_REF_CS__OWNED_MULTIPLICITY;

  /**
   * The feature id for the '<em><b>Owned Path Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_NAME_EXP_CS__OWNED_PATH_NAME = TYPED_REF_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Owned Curly Bracketed Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_NAME_EXP_CS__OWNED_CURLY_BRACKETED_CLAUSE = TYPED_REF_CS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Owned Pattern Guard</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_NAME_EXP_CS__OWNED_PATTERN_GUARD = TYPED_REF_CS_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Type Name Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_NAME_EXP_CS_FEATURE_COUNT = TYPED_REF_CS_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.CurlyBracketedClauseCSImpl <em>Curly Bracketed Clause CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.CurlyBracketedClauseCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getCurlyBracketedClauseCS()
   * @generated
   */
  int CURLY_BRACKETED_CLAUSE_CS = 46;

  /**
   * The feature id for the '<em><b>Owned Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CURLY_BRACKETED_CLAUSE_CS__OWNED_PARTS = 0;

  /**
   * The number of structural features of the '<em>Curly Bracketed Clause CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CURLY_BRACKETED_CLAUSE_CS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ShadowPartCSImpl <em>Shadow Part CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ShadowPartCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getShadowPartCS()
   * @generated
   */
  int SHADOW_PART_CS = 47;

  /**
   * The feature id for the '<em><b>Referred Property</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHADOW_PART_CS__REFERRED_PROPERTY = 0;

  /**
   * The feature id for the '<em><b>Owned Init Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHADOW_PART_CS__OWNED_INIT_EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Shadow Part CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SHADOW_PART_CS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.PrimitiveLiteralExpCSImpl <em>Primitive Literal Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.PrimitiveLiteralExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getPrimitiveLiteralExpCS()
   * @generated
   */
  int PRIMITIVE_LITERAL_EXP_CS = 54;

  /**
   * The number of structural features of the '<em>Primitive Literal Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMITIVE_LITERAL_EXP_CS_FEATURE_COUNT = EXP_CS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.StringLiteralExpCSImpl <em>String Literal Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.StringLiteralExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getStringLiteralExpCS()
   * @generated
   */
  int STRING_LITERAL_EXP_CS = 48;

  /**
   * The feature id for the '<em><b>Segments</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_EXP_CS__SEGMENTS = PRIMITIVE_LITERAL_EXP_CS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Literal Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_LITERAL_EXP_CS_FEATURE_COUNT = PRIMITIVE_LITERAL_EXP_CS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.MultiplicityCSImpl <em>Multiplicity CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.MultiplicityCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getMultiplicityCS()
   * @generated
   */
  int MULTIPLICITY_CS = 50;

  /**
   * The feature id for the '<em><b>Symbol</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY_CS__SYMBOL = 0;

  /**
   * The number of structural features of the '<em>Multiplicity CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY_CS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.MultiplicityBoundsCSImpl <em>Multiplicity Bounds CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.MultiplicityBoundsCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getMultiplicityBoundsCS()
   * @generated
   */
  int MULTIPLICITY_BOUNDS_CS = 49;

  /**
   * The feature id for the '<em><b>Symbol</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY_BOUNDS_CS__SYMBOL = MULTIPLICITY_CS__SYMBOL;

  /**
   * The feature id for the '<em><b>Lower Bound</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY_BOUNDS_CS__LOWER_BOUND = MULTIPLICITY_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Upper Bound</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY_BOUNDS_CS__UPPER_BOUND = MULTIPLICITY_CS_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Multiplicity Bounds CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY_BOUNDS_CS_FEATURE_COUNT = MULTIPLICITY_CS_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.MultiplicityStringCSImpl <em>Multiplicity String CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.MultiplicityStringCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getMultiplicityStringCS()
   * @generated
   */
  int MULTIPLICITY_STRING_CS = 51;

  /**
   * The feature id for the '<em><b>Symbol</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY_STRING_CS__SYMBOL = MULTIPLICITY_CS__SYMBOL;

  /**
   * The feature id for the '<em><b>String Bounds</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY_STRING_CS__STRING_BOUNDS = MULTIPLICITY_CS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Multiplicity String CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY_STRING_CS_FEATURE_COUNT = MULTIPLICITY_CS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.PathNameCSImpl <em>Path Name CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.PathNameCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getPathNameCS()
   * @generated
   */
  int PATH_NAME_CS = 52;

  /**
   * The feature id for the '<em><b>Owned Path Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH_NAME_CS__OWNED_PATH_ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>Path Name CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH_NAME_CS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.NameExpCSImpl <em>Name Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.NameExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getNameExpCS()
   * @generated
   */
  int NAME_EXP_CS = 55;

  /**
   * The feature id for the '<em><b>Owned Path Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_EXP_CS__OWNED_PATH_NAME = EXP_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Owned Square Bracketed Clauses</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_EXP_CS__OWNED_SQUARE_BRACKETED_CLAUSES = EXP_CS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Owned Round Bracketed Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_EXP_CS__OWNED_ROUND_BRACKETED_CLAUSE = EXP_CS_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Owned Curly Bracketed Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_EXP_CS__OWNED_CURLY_BRACKETED_CLAUSE = EXP_CS_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Is Pre</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_EXP_CS__IS_PRE = EXP_CS_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Pre</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_EXP_CS__PRE = EXP_CS_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>Name Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAME_EXP_CS_FEATURE_COUNT = EXP_CS_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.SquareBracketedClauseCSImpl <em>Square Bracketed Clause CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.SquareBracketedClauseCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getSquareBracketedClauseCS()
   * @generated
   */
  int SQUARE_BRACKETED_CLAUSE_CS = 56;

  /**
   * The feature id for the '<em><b>Owned Terms</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETED_CLAUSE_CS__OWNED_TERMS = 0;

  /**
   * The number of structural features of the '<em>Square Bracketed Clause CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SQUARE_BRACKETED_CLAUSE_CS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.CollectionLiteralExpCSImpl <em>Collection Literal Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.CollectionLiteralExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getCollectionLiteralExpCS()
   * @generated
   */
  int COLLECTION_LITERAL_EXP_CS = 57;

  /**
   * The feature id for the '<em><b>Owned Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_LITERAL_EXP_CS__OWNED_TYPE = EXP_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Owned Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_LITERAL_EXP_CS__OWNED_PARTS = EXP_CS_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Collection Literal Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_LITERAL_EXP_CS_FEATURE_COUNT = EXP_CS_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.CollectionLiteralPartCSImpl <em>Collection Literal Part CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.CollectionLiteralPartCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getCollectionLiteralPartCS()
   * @generated
   */
  int COLLECTION_LITERAL_PART_CS = 58;

  /**
   * The feature id for the '<em><b>Owned Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_LITERAL_PART_CS__OWNED_EXPRESSION = 0;

  /**
   * The feature id for the '<em><b>Owned Last Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_LITERAL_PART_CS__OWNED_LAST_EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Collection Literal Part CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_LITERAL_PART_CS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.LambdaLiteralExpCSImpl <em>Lambda Literal Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.LambdaLiteralExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getLambdaLiteralExpCS()
   * @generated
   */
  int LAMBDA_LITERAL_EXP_CS = 59;

  /**
   * The feature id for the '<em><b>Owned Expression CS</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_LITERAL_EXP_CS__OWNED_EXPRESSION_CS = EXP_CS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Lambda Literal Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LAMBDA_LITERAL_EXP_CS_FEATURE_COUNT = EXP_CS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.MapLiteralExpCSImpl <em>Map Literal Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.MapLiteralExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getMapLiteralExpCS()
   * @generated
   */
  int MAP_LITERAL_EXP_CS = 60;

  /**
   * The feature id for the '<em><b>Owned Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL_EXP_CS__OWNED_TYPE = EXP_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Owned Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL_EXP_CS__OWNED_PARTS = EXP_CS_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Map Literal Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL_EXP_CS_FEATURE_COUNT = EXP_CS_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.MapLiteralPartCSImpl <em>Map Literal Part CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.MapLiteralPartCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getMapLiteralPartCS()
   * @generated
   */
  int MAP_LITERAL_PART_CS = 61;

  /**
   * The feature id for the '<em><b>Owned Key</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL_PART_CS__OWNED_KEY = 0;

  /**
   * The feature id for the '<em><b>Owned Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL_PART_CS__OWNED_VALUE = 1;

  /**
   * The number of structural features of the '<em>Map Literal Part CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAP_LITERAL_PART_CS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.TupleLiteralExpCSImpl <em>Tuple Literal Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.TupleLiteralExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getTupleLiteralExpCS()
   * @generated
   */
  int TUPLE_LITERAL_EXP_CS = 62;

  /**
   * The feature id for the '<em><b>Owned Parts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_LITERAL_EXP_CS__OWNED_PARTS = EXP_CS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Tuple Literal Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_LITERAL_EXP_CS_FEATURE_COUNT = EXP_CS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.TupleLiteralPartCSImpl <em>Tuple Literal Part CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.TupleLiteralPartCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getTupleLiteralPartCS()
   * @generated
   */
  int TUPLE_LITERAL_PART_CS = 63;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_LITERAL_PART_CS__NAME = 0;

  /**
   * The feature id for the '<em><b>Owned Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_LITERAL_PART_CS__OWNED_TYPE = 1;

  /**
   * The feature id for the '<em><b>Owned Init Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_LITERAL_PART_CS__OWNED_INIT_EXPRESSION = 2;

  /**
   * The number of structural features of the '<em>Tuple Literal Part CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TUPLE_LITERAL_PART_CS_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.NumberLiteralExpCSImpl <em>Number Literal Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.NumberLiteralExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getNumberLiteralExpCS()
   * @generated
   */
  int NUMBER_LITERAL_EXP_CS = 64;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_EXP_CS__VALUE = PRIMITIVE_LITERAL_EXP_CS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Number Literal Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_LITERAL_EXP_CS_FEATURE_COUNT = PRIMITIVE_LITERAL_EXP_CS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.BooleanLiteralExpCSImpl <em>Boolean Literal Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.BooleanLiteralExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getBooleanLiteralExpCS()
   * @generated
   */
  int BOOLEAN_LITERAL_EXP_CS = 65;

  /**
   * The feature id for the '<em><b>Symbol</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_EXP_CS__SYMBOL = PRIMITIVE_LITERAL_EXP_CS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Boolean Literal Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_LITERAL_EXP_CS_FEATURE_COUNT = PRIMITIVE_LITERAL_EXP_CS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.UnlimitedNaturalLiteralExpCSImpl <em>Unlimited Natural Literal Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.UnlimitedNaturalLiteralExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getUnlimitedNaturalLiteralExpCS()
   * @generated
   */
  int UNLIMITED_NATURAL_LITERAL_EXP_CS = 66;

  /**
   * The number of structural features of the '<em>Unlimited Natural Literal Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNLIMITED_NATURAL_LITERAL_EXP_CS_FEATURE_COUNT = PRIMITIVE_LITERAL_EXP_CS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.InvalidLiteralExpCSImpl <em>Invalid Literal Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.InvalidLiteralExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getInvalidLiteralExpCS()
   * @generated
   */
  int INVALID_LITERAL_EXP_CS = 67;

  /**
   * The number of structural features of the '<em>Invalid Literal Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVALID_LITERAL_EXP_CS_FEATURE_COUNT = PRIMITIVE_LITERAL_EXP_CS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.NullLiteralExpCSImpl <em>Null Literal Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.NullLiteralExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getNullLiteralExpCS()
   * @generated
   */
  int NULL_LITERAL_EXP_CS = 68;

  /**
   * The number of structural features of the '<em>Null Literal Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NULL_LITERAL_EXP_CS_FEATURE_COUNT = PRIMITIVE_LITERAL_EXP_CS_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.NestedExpCSImpl <em>Nested Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.NestedExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getNestedExpCS()
   * @generated
   */
  int NESTED_EXP_CS = 69;

  /**
   * The feature id for the '<em><b>Owned Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_EXP_CS__OWNED_EXPRESSION = EXP_CS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Nested Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_EXP_CS_FEATURE_COUNT = EXP_CS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.IfExpCSImpl <em>If Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.IfExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getIfExpCS()
   * @generated
   */
  int IF_EXP_CS = 70;

  /**
   * The feature id for the '<em><b>Owned Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP_CS__OWNED_CONDITION = EXP_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Owned Then Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP_CS__OWNED_THEN_EXPRESSION = EXP_CS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Owned If Then Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP_CS__OWNED_IF_THEN_EXPRESSIONS = EXP_CS_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Owned Else Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP_CS__OWNED_ELSE_EXPRESSION = EXP_CS_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>If Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXP_CS_FEATURE_COUNT = EXP_CS_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.IfThenExpCSImpl <em>If Then Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.IfThenExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getIfThenExpCS()
   * @generated
   */
  int IF_THEN_EXP_CS = 71;

  /**
   * The feature id for the '<em><b>Owned Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_THEN_EXP_CS__OWNED_CONDITION = 0;

  /**
   * The feature id for the '<em><b>Owned Then Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_THEN_EXP_CS__OWNED_THEN_EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>If Then Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_THEN_EXP_CS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.LetExpCSImpl <em>Let Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.LetExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getLetExpCS()
   * @generated
   */
  int LET_EXP_CS = 72;

  /**
   * The feature id for the '<em><b>Owned Variables</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET_EXP_CS__OWNED_VARIABLES = EXP_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Owned In Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET_EXP_CS__OWNED_IN_EXPRESSION = EXP_CS_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Let Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET_EXP_CS_FEATURE_COUNT = EXP_CS_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.LetVariableCSImpl <em>Let Variable CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.LetVariableCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getLetVariableCS()
   * @generated
   */
  int LET_VARIABLE_CS = 73;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET_VARIABLE_CS__NAME = 0;

  /**
   * The feature id for the '<em><b>Owned Round Bracketed Clause</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET_VARIABLE_CS__OWNED_ROUND_BRACKETED_CLAUSE = 1;

  /**
   * The feature id for the '<em><b>Owned Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET_VARIABLE_CS__OWNED_TYPE = 2;

  /**
   * The feature id for the '<em><b>Owned Init Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET_VARIABLE_CS__OWNED_INIT_EXPRESSION = 3;

  /**
   * The number of structural features of the '<em>Let Variable CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LET_VARIABLE_CS_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.RoundBracketedClauseCSImpl <em>Round Bracketed Clause CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.RoundBracketedClauseCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getRoundBracketedClauseCS()
   * @generated
   */
  int ROUND_BRACKETED_CLAUSE_CS = 74;

  /**
   * The feature id for the '<em><b>Owned Arguments</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROUND_BRACKETED_CLAUSE_CS__OWNED_ARGUMENTS = 0;

  /**
   * The number of structural features of the '<em>Round Bracketed Clause CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROUND_BRACKETED_CLAUSE_CS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.NavigatingArgCSImpl <em>Navigating Arg CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.NavigatingArgCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getNavigatingArgCS()
   * @generated
   */
  int NAVIGATING_ARG_CS = 75;

  /**
   * The feature id for the '<em><b>Prefix</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATING_ARG_CS__PREFIX = 0;

  /**
   * The feature id for the '<em><b>Owned Name Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATING_ARG_CS__OWNED_NAME_EXPRESSION = 1;

  /**
   * The feature id for the '<em><b>Symbol T</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATING_ARG_CS__SYMBOL_T = 2;

  /**
   * The feature id for the '<em><b>Owned Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATING_ARG_CS__OWNED_TYPE = 3;

  /**
   * The feature id for the '<em><b>Symbol IE</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATING_ARG_CS__SYMBOL_IE = 4;

  /**
   * The feature id for the '<em><b>Owned Init Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATING_ARG_CS__OWNED_INIT_EXPRESSION = 5;

  /**
   * The feature id for the '<em><b>Symbol CI</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATING_ARG_CS__SYMBOL_CI = 6;

  /**
   * The feature id for the '<em><b>Owned Co Iterator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATING_ARG_CS__OWNED_CO_ITERATOR = 7;

  /**
   * The number of structural features of the '<em>Navigating Arg CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NAVIGATING_ARG_CS_FEATURE_COUNT = 8;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.VariableCSImpl <em>Variable CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.VariableCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getVariableCS()
   * @generated
   */
  int VARIABLE_CS = 76;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_CS__NAME = 0;

  /**
   * The feature id for the '<em><b>Owned Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_CS__OWNED_TYPE = 1;

  /**
   * The number of structural features of the '<em>Variable CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_CS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.InfixExpCSImpl <em>Infix Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.InfixExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getInfixExpCS()
   * @generated
   */
  int INFIX_EXP_CS = 77;

  /**
   * The feature id for the '<em><b>Owned Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INFIX_EXP_CS__OWNED_LEFT = EXP_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INFIX_EXP_CS__OPERATOR = EXP_CS_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Owned Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INFIX_EXP_CS__OWNED_RIGHT = EXP_CS_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Infix Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INFIX_EXP_CS_FEATURE_COUNT = EXP_CS_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.PrefixExpCSImpl <em>Prefix Exp CS</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.PrefixExpCSImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getPrefixExpCS()
   * @generated
   */
  int PREFIX_EXP_CS = 78;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREFIX_EXP_CS__NAME = EXP_CS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Owned Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREFIX_EXP_CS__OWNED_RIGHT = EXP_CS_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Prefix Exp CS</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PREFIX_EXP_CS_FEATURE_COUNT = EXP_CS_FEATURE_COUNT + 2;


  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.ModelUSE <em>Model USE</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model USE</em>'.
   * @see modelConverter.use_language.use.ModelUSE
   * @generated
   */
  EClass getModelUSE();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.ModelUSE#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.ModelUSE#getName()
   * @see #getModelUSE()
   * @generated
   */
  EAttribute getModelUSE_Name();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.ModelUSE#getEnums <em>Enums</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Enums</em>'.
   * @see modelConverter.use_language.use.ModelUSE#getEnums()
   * @see #getModelUSE()
   * @generated
   */
  EReference getModelUSE_Enums();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.ModelUSE#getPackagedElement <em>Packaged Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Packaged Element</em>'.
   * @see modelConverter.use_language.use.ModelUSE#getPackagedElement()
   * @see #getModelUSE()
   * @generated
   */
  EReference getModelUSE_PackagedElement();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.ModelUSE#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constraints</em>'.
   * @see modelConverter.use_language.use.ModelUSE#getConstraints()
   * @see #getModelUSE()
   * @generated
   */
  EReference getModelUSE_Constraints();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Multiplicity <em>Multiplicity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplicity</em>'.
   * @see modelConverter.use_language.use.Multiplicity
   * @generated
   */
  EClass getMultiplicity();

  /**
   * Returns the meta object for the attribute list '{@link modelConverter.use_language.use.Multiplicity#getMinValue <em>Min Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Min Value</em>'.
   * @see modelConverter.use_language.use.Multiplicity#getMinValue()
   * @see #getMultiplicity()
   * @generated
   */
  EAttribute getMultiplicity_MinValue();

  /**
   * Returns the meta object for the attribute list '{@link modelConverter.use_language.use.Multiplicity#getMaxValue <em>Max Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Max Value</em>'.
   * @see modelConverter.use_language.use.Multiplicity#getMaxValue()
   * @see #getMultiplicity()
   * @generated
   */
  EAttribute getMultiplicity_MaxValue();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.AllTypes <em>All Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>All Types</em>'.
   * @see modelConverter.use_language.use.AllTypes
   * @generated
   */
  EClass getAllTypes();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see modelConverter.use_language.use.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Type#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.Type#getName()
   * @see #getType()
   * @generated
   */
  EAttribute getType_Name();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.CollectionType <em>Collection Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Collection Type</em>'.
   * @see modelConverter.use_language.use.CollectionType
   * @generated
   */
  EClass getCollectionType();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.CollectionType#getCollection <em>Collection</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Collection</em>'.
   * @see modelConverter.use_language.use.CollectionType#getCollection()
   * @see #getCollectionType()
   * @generated
   */
  EAttribute getCollectionType_Collection();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.CollectionType#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Type</em>'.
   * @see modelConverter.use_language.use.CollectionType#getType()
   * @see #getCollectionType()
   * @generated
   */
  EReference getCollectionType_Type();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.AllClass <em>All Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>All Class</em>'.
   * @see modelConverter.use_language.use.AllClass
   * @generated
   */
  EClass getAllClass();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.AllClassAndEnum <em>All Class And Enum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>All Class And Enum</em>'.
   * @see modelConverter.use_language.use.AllClassAndEnum
   * @generated
   */
  EClass getAllClassAndEnum();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.SimpleTypes <em>Simple Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Types</em>'.
   * @see modelConverter.use_language.use.SimpleTypes
   * @generated
   */
  EClass getSimpleTypes();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.SimpleTypes#getDefaultType <em>Default Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Default Type</em>'.
   * @see modelConverter.use_language.use.SimpleTypes#getDefaultType()
   * @see #getSimpleTypes()
   * @generated
   */
  EAttribute getSimpleTypes_DefaultType();

  /**
   * Returns the meta object for the reference '{@link modelConverter.use_language.use.SimpleTypes#getReferended <em>Referended</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Referended</em>'.
   * @see modelConverter.use_language.use.SimpleTypes#getReferended()
   * @see #getSimpleTypes()
   * @generated
   */
  EReference getSimpleTypes_Referended();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Enum <em>Enum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Enum</em>'.
   * @see modelConverter.use_language.use.Enum
   * @generated
   */
  EClass getEnum();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Enum#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.Enum#getName()
   * @see #getEnum()
   * @generated
   */
  EAttribute getEnum_Name();

  /**
   * Returns the meta object for the attribute list '{@link modelConverter.use_language.use.Enum#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Elements</em>'.
   * @see modelConverter.use_language.use.Enum#getElements()
   * @see #getEnum()
   * @generated
   */
  EAttribute getEnum_Elements();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Class <em>Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Class</em>'.
   * @see modelConverter.use_language.use.Class
   * @generated
   */
  EClass getClass_();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Class#isAbstract <em>Abstract</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Abstract</em>'.
   * @see modelConverter.use_language.use.Class#isAbstract()
   * @see #getClass_()
   * @generated
   */
  EAttribute getClass_Abstract();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.Class#getGeneralization <em>Generalization</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Generalization</em>'.
   * @see modelConverter.use_language.use.Class#getGeneralization()
   * @see #getClass_()
   * @generated
   */
  EReference getClass_Generalization();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Class#getAttributes <em>Attributes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Attributes</em>'.
   * @see modelConverter.use_language.use.Class#getAttributes()
   * @see #getClass_()
   * @generated
   */
  EReference getClass_Attributes();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Class#getOperations <em>Operations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operations</em>'.
   * @see modelConverter.use_language.use.Class#getOperations()
   * @see #getClass_()
   * @generated
   */
  EReference getClass_Operations();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Class#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constraints</em>'.
   * @see modelConverter.use_language.use.Class#getConstraints()
   * @see #getClass_()
   * @generated
   */
  EReference getClass_Constraints();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Class#getStatemachines <em>Statemachines</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statemachines</em>'.
   * @see modelConverter.use_language.use.Class#getStatemachines()
   * @see #getClass_()
   * @generated
   */
  EReference getClass_Statemachines();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Generalization <em>Generalization</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Generalization</em>'.
   * @see modelConverter.use_language.use.Generalization
   * @generated
   */
  EClass getGeneralization();

  /**
   * Returns the meta object for the reference '{@link modelConverter.use_language.use.Generalization#getGeneral <em>General</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>General</em>'.
   * @see modelConverter.use_language.use.Generalization#getGeneral()
   * @see #getGeneralization()
   * @generated
   */
  EReference getGeneralization_General();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Association <em>Association</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Association</em>'.
   * @see modelConverter.use_language.use.Association
   * @generated
   */
  EClass getAssociation();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Association#getTypeAssociation <em>Type Association</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type Association</em>'.
   * @see modelConverter.use_language.use.Association#getTypeAssociation()
   * @see #getAssociation()
   * @generated
   */
  EAttribute getAssociation_TypeAssociation();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.Association#getAssociationEnds <em>Association Ends</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Association Ends</em>'.
   * @see modelConverter.use_language.use.Association#getAssociationEnds()
   * @see #getAssociation()
   * @generated
   */
  EReference getAssociation_AssociationEnds();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.AssociationEnd <em>Association End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Association End</em>'.
   * @see modelConverter.use_language.use.AssociationEnd
   * @generated
   */
  EClass getAssociationEnd();

  /**
   * Returns the meta object for the reference '{@link modelConverter.use_language.use.AssociationEnd#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Type</em>'.
   * @see modelConverter.use_language.use.AssociationEnd#getType()
   * @see #getAssociationEnd()
   * @generated
   */
  EReference getAssociationEnd_Type();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.AssociationEnd#getMul <em>Mul</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Mul</em>'.
   * @see modelConverter.use_language.use.AssociationEnd#getMul()
   * @see #getAssociationEnd()
   * @generated
   */
  EReference getAssociationEnd_Mul();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.AssociationEnd#getRole <em>Role</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Role</em>'.
   * @see modelConverter.use_language.use.AssociationEnd#getRole()
   * @see #getAssociationEnd()
   * @generated
   */
  EAttribute getAssociationEnd_Role();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.AssociationEnd#isOrdered <em>Ordered</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Ordered</em>'.
   * @see modelConverter.use_language.use.AssociationEnd#isOrdered()
   * @see #getAssociationEnd()
   * @generated
   */
  EAttribute getAssociationEnd_Ordered();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.AssociationClass <em>Association Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Association Class</em>'.
   * @see modelConverter.use_language.use.AssociationClass
   * @generated
   */
  EClass getAssociationClass();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.AssociationClass#isAbstract <em>Abstract</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Abstract</em>'.
   * @see modelConverter.use_language.use.AssociationClass#isAbstract()
   * @see #getAssociationClass()
   * @generated
   */
  EAttribute getAssociationClass_Abstract();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.AssociationClass#getGeneralization <em>Generalization</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Generalization</em>'.
   * @see modelConverter.use_language.use.AssociationClass#getGeneralization()
   * @see #getAssociationClass()
   * @generated
   */
  EReference getAssociationClass_Generalization();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.AssociationClass#getAssociationEnds <em>Association Ends</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Association Ends</em>'.
   * @see modelConverter.use_language.use.AssociationClass#getAssociationEnds()
   * @see #getAssociationClass()
   * @generated
   */
  EReference getAssociationClass_AssociationEnds();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.AssociationClass#getAttributes <em>Attributes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Attributes</em>'.
   * @see modelConverter.use_language.use.AssociationClass#getAttributes()
   * @see #getAssociationClass()
   * @generated
   */
  EReference getAssociationClass_Attributes();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.AssociationClass#getOperations <em>Operations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operations</em>'.
   * @see modelConverter.use_language.use.AssociationClass#getOperations()
   * @see #getAssociationClass()
   * @generated
   */
  EReference getAssociationClass_Operations();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.AssociationClass#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constraints</em>'.
   * @see modelConverter.use_language.use.AssociationClass#getConstraints()
   * @see #getAssociationClass()
   * @generated
   */
  EReference getAssociationClass_Constraints();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.AssociationClass#getStatemachines <em>Statemachines</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statemachines</em>'.
   * @see modelConverter.use_language.use.AssociationClass#getStatemachines()
   * @see #getAssociationClass()
   * @generated
   */
  EReference getAssociationClass_Statemachines();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.AttributesBase <em>Attributes Base</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Attributes Base</em>'.
   * @see modelConverter.use_language.use.AttributesBase
   * @generated
   */
  EClass getAttributesBase();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.AttributesBase#getAttributes <em>Attributes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Attributes</em>'.
   * @see modelConverter.use_language.use.AttributesBase#getAttributes()
   * @see #getAttributesBase()
   * @generated
   */
  EReference getAttributesBase_Attributes();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Attribute <em>Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Attribute</em>'.
   * @see modelConverter.use_language.use.Attribute
   * @generated
   */
  EClass getAttribute();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Attribute#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.Attribute#getName()
   * @see #getAttribute()
   * @generated
   */
  EAttribute getAttribute_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Attribute#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see modelConverter.use_language.use.Attribute#getType()
   * @see #getAttribute()
   * @generated
   */
  EReference getAttribute_Type();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Attribute#getInitOCL <em>Init OCL</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Init OCL</em>'.
   * @see modelConverter.use_language.use.Attribute#getInitOCL()
   * @see #getAttribute()
   * @generated
   */
  EReference getAttribute_InitOCL();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Attribute#getDeriveOCL <em>Derive OCL</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Derive OCL</em>'.
   * @see modelConverter.use_language.use.Attribute#getDeriveOCL()
   * @see #getAttribute()
   * @generated
   */
  EReference getAttribute_DeriveOCL();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationsBase <em>Operations Base</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operations Base</em>'.
   * @see modelConverter.use_language.use.OperationsBase
   * @generated
   */
  EClass getOperationsBase();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.OperationsBase#getOperations <em>Operations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Operations</em>'.
   * @see modelConverter.use_language.use.OperationsBase#getOperations()
   * @see #getOperationsBase()
   * @generated
   */
  EReference getOperationsBase_Operations();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationType <em>Operation Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Type</em>'.
   * @see modelConverter.use_language.use.OperationType
   * @generated
   */
  EClass getOperationType();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.OperationType#getOperationDeclaration <em>Operation Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operation Declaration</em>'.
   * @see modelConverter.use_language.use.OperationType#getOperationDeclaration()
   * @see #getOperationType()
   * @generated
   */
  EReference getOperationType_OperationDeclaration();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.OperationType#getConditions <em>Conditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Conditions</em>'.
   * @see modelConverter.use_language.use.OperationType#getConditions()
   * @see #getOperationType()
   * @generated
   */
  EReference getOperationType_Conditions();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationQuery <em>Operation Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Query</em>'.
   * @see modelConverter.use_language.use.OperationQuery
   * @generated
   */
  EClass getOperationQuery();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.OperationQuery#getOperationbody <em>Operationbody</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operationbody</em>'.
   * @see modelConverter.use_language.use.OperationQuery#getOperationbody()
   * @see #getOperationQuery()
   * @generated
   */
  EReference getOperationQuery_Operationbody();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationComplex <em>Operation Complex</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Complex</em>'.
   * @see modelConverter.use_language.use.OperationComplex
   * @generated
   */
  EClass getOperationComplex();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.OperationComplex#getOperationbody <em>Operationbody</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operationbody</em>'.
   * @see modelConverter.use_language.use.OperationComplex#getOperationbody()
   * @see #getOperationComplex()
   * @generated
   */
  EAttribute getOperationComplex_Operationbody();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationDeclaration <em>Operation Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Declaration</em>'.
   * @see modelConverter.use_language.use.OperationDeclaration
   * @generated
   */
  EClass getOperationDeclaration();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.OperationDeclaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.OperationDeclaration#getName()
   * @see #getOperationDeclaration()
   * @generated
   */
  EAttribute getOperationDeclaration_Name();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.OperationDeclaration#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see modelConverter.use_language.use.OperationDeclaration#getParameters()
   * @see #getOperationDeclaration()
   * @generated
   */
  EReference getOperationDeclaration_Parameters();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.OperationDeclaration#getReturnType <em>Return Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Return Type</em>'.
   * @see modelConverter.use_language.use.OperationDeclaration#getReturnType()
   * @see #getOperationDeclaration()
   * @generated
   */
  EReference getOperationDeclaration_ReturnType();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Parameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parameter</em>'.
   * @see modelConverter.use_language.use.Parameter
   * @generated
   */
  EClass getParameter();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Parameter#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.Parameter#getName()
   * @see #getParameter()
   * @generated
   */
  EAttribute getParameter_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Parameter#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see modelConverter.use_language.use.Parameter#getType()
   * @see #getParameter()
   * @generated
   */
  EReference getParameter_Type();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.StateMachinesBase <em>State Machines Base</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>State Machines Base</em>'.
   * @see modelConverter.use_language.use.StateMachinesBase
   * @generated
   */
  EClass getStateMachinesBase();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.StateMachinesBase#getStatemachines <em>Statemachines</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statemachines</em>'.
   * @see modelConverter.use_language.use.StateMachinesBase#getStatemachines()
   * @see #getStateMachinesBase()
   * @generated
   */
  EReference getStateMachinesBase_Statemachines();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.StateMachine <em>State Machine</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>State Machine</em>'.
   * @see modelConverter.use_language.use.StateMachine
   * @generated
   */
  EClass getStateMachine();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.StateMachine#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.StateMachine#getName()
   * @see #getStateMachine()
   * @generated
   */
  EAttribute getStateMachine_Name();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.StateMachine#getStates <em>States</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>States</em>'.
   * @see modelConverter.use_language.use.StateMachine#getStates()
   * @see #getStateMachine()
   * @generated
   */
  EReference getStateMachine_States();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.StateMachine#getTransitions <em>Transitions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Transitions</em>'.
   * @see modelConverter.use_language.use.StateMachine#getTransitions()
   * @see #getStateMachine()
   * @generated
   */
  EReference getStateMachine_Transitions();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.State <em>State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>State</em>'.
   * @see modelConverter.use_language.use.State
   * @generated
   */
  EClass getState();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.State#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.State#getName()
   * @see #getState()
   * @generated
   */
  EAttribute getState_Name();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.State#isIsInitial <em>Is Initial</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Initial</em>'.
   * @see modelConverter.use_language.use.State#isIsInitial()
   * @see #getState()
   * @generated
   */
  EAttribute getState_IsInitial();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.State#isIsFinal <em>Is Final</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Final</em>'.
   * @see modelConverter.use_language.use.State#isIsFinal()
   * @see #getState()
   * @generated
   */
  EAttribute getState_IsFinal();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.State#getInvariant <em>Invariant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Invariant</em>'.
   * @see modelConverter.use_language.use.State#getInvariant()
   * @see #getState()
   * @generated
   */
  EReference getState_Invariant();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Transition <em>Transition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Transition</em>'.
   * @see modelConverter.use_language.use.Transition
   * @generated
   */
  EClass getTransition();

  /**
   * Returns the meta object for the reference '{@link modelConverter.use_language.use.Transition#getSource <em>Source</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Source</em>'.
   * @see modelConverter.use_language.use.Transition#getSource()
   * @see #getTransition()
   * @generated
   */
  EReference getTransition_Source();

  /**
   * Returns the meta object for the reference '{@link modelConverter.use_language.use.Transition#getTarget <em>Target</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Target</em>'.
   * @see modelConverter.use_language.use.Transition#getTarget()
   * @see #getTransition()
   * @generated
   */
  EReference getTransition_Target();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Transition#getPrecondition <em>Precondition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Precondition</em>'.
   * @see modelConverter.use_language.use.Transition#getPrecondition()
   * @see #getTransition()
   * @generated
   */
  EReference getTransition_Precondition();

  /**
   * Returns the meta object for the reference '{@link modelConverter.use_language.use.Transition#getOperation <em>Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Operation</em>'.
   * @see modelConverter.use_language.use.Transition#getOperation()
   * @see #getTransition()
   * @generated
   */
  EReference getTransition_Operation();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Transition#getPostcondition <em>Postcondition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Postcondition</em>'.
   * @see modelConverter.use_language.use.Transition#getPostcondition()
   * @see #getTransition()
   * @generated
   */
  EReference getTransition_Postcondition();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.ConstraintsBase <em>Constraints Base</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constraints Base</em>'.
   * @see modelConverter.use_language.use.ConstraintsBase
   * @generated
   */
  EClass getConstraintsBase();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.ConstraintsBase#getInvariants <em>Invariants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Invariants</em>'.
   * @see modelConverter.use_language.use.ConstraintsBase#getInvariants()
   * @see #getConstraintsBase()
   * @generated
   */
  EReference getConstraintsBase_Invariants();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.ConstrainsGeneral <em>Constrains General</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constrains General</em>'.
   * @see modelConverter.use_language.use.ConstrainsGeneral
   * @generated
   */
  EClass getConstrainsGeneral();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.ConstrainsGeneral#getContexts <em>Contexts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Contexts</em>'.
   * @see modelConverter.use_language.use.ConstrainsGeneral#getContexts()
   * @see #getConstrainsGeneral()
   * @generated
   */
  EReference getConstrainsGeneral_Contexts();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.ContextsType <em>Contexts Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Contexts Type</em>'.
   * @see modelConverter.use_language.use.ContextsType
   * @generated
   */
  EClass getContextsType();

  /**
   * Returns the meta object for the reference '{@link modelConverter.use_language.use.ContextsType#getClassname <em>Classname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Classname</em>'.
   * @see modelConverter.use_language.use.ContextsType#getClassname()
   * @see #getContextsType()
   * @generated
   */
  EReference getContextsType_Classname();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.InvariantContext <em>Invariant Context</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Invariant Context</em>'.
   * @see modelConverter.use_language.use.InvariantContext
   * @generated
   */
  EClass getInvariantContext();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.InvariantContext#getVariablename <em>Variablename</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Variablename</em>'.
   * @see modelConverter.use_language.use.InvariantContext#getVariablename()
   * @see #getInvariantContext()
   * @generated
   */
  EAttribute getInvariantContext_Variablename();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.InvariantContext#getInvariants <em>Invariants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Invariants</em>'.
   * @see modelConverter.use_language.use.InvariantContext#getInvariants()
   * @see #getInvariantContext()
   * @generated
   */
  EReference getInvariantContext_Invariants();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.InvariantDefinition <em>Invariant Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Invariant Definition</em>'.
   * @see modelConverter.use_language.use.InvariantDefinition
   * @generated
   */
  EClass getInvariantDefinition();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.InvariantDefinition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.InvariantDefinition#getName()
   * @see #getInvariantDefinition()
   * @generated
   */
  EAttribute getInvariantDefinition_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.InvariantDefinition#getOclexpression <em>Oclexpression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Oclexpression</em>'.
   * @see modelConverter.use_language.use.InvariantDefinition#getOclexpression()
   * @see #getInvariantDefinition()
   * @generated
   */
  EReference getInvariantDefinition_Oclexpression();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationContext <em>Operation Context</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Context</em>'.
   * @see modelConverter.use_language.use.OperationContext
   * @generated
   */
  EClass getOperationContext();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.OperationContext#getConstrains <em>Constrains</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constrains</em>'.
   * @see modelConverter.use_language.use.OperationContext#getConstrains()
   * @see #getOperationContext()
   * @generated
   */
  EReference getOperationContext_Constrains();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationConstraints <em>Operation Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Constraints</em>'.
   * @see modelConverter.use_language.use.OperationConstraints
   * @generated
   */
  EClass getOperationConstraints();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.OperationConstraints#getOperationDeclaration <em>Operation Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operation Declaration</em>'.
   * @see modelConverter.use_language.use.OperationConstraints#getOperationDeclaration()
   * @see #getOperationConstraints()
   * @generated
   */
  EReference getOperationConstraints_OperationDeclaration();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.OperationConstraints#getConditions <em>Conditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Conditions</em>'.
   * @see modelConverter.use_language.use.OperationConstraints#getConditions()
   * @see #getOperationConstraints()
   * @generated
   */
  EReference getOperationConstraints_Conditions();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.ConditionType <em>Condition Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Condition Type</em>'.
   * @see modelConverter.use_language.use.ConditionType
   * @generated
   */
  EClass getConditionType();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.ConditionType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.ConditionType#getName()
   * @see #getConditionType()
   * @generated
   */
  EAttribute getConditionType_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.ConditionType#getOclexpression <em>Oclexpression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Oclexpression</em>'.
   * @see modelConverter.use_language.use.ConditionType#getOclexpression()
   * @see #getConditionType()
   * @generated
   */
  EReference getConditionType_Oclexpression();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Precondition <em>Precondition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Precondition</em>'.
   * @see modelConverter.use_language.use.Precondition
   * @generated
   */
  EClass getPrecondition();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Postcondition <em>Postcondition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Postcondition</em>'.
   * @see modelConverter.use_language.use.Postcondition
   * @generated
   */
  EClass getPostcondition();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.PrimitiveTypeRefCS <em>Primitive Type Ref CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primitive Type Ref CS</em>'.
   * @see modelConverter.use_language.use.PrimitiveTypeRefCS
   * @generated
   */
  EClass getPrimitiveTypeRefCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.PrimitiveTypeRefCS#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.PrimitiveTypeRefCS#getName()
   * @see #getPrimitiveTypeRefCS()
   * @generated
   */
  EAttribute getPrimitiveTypeRefCS_Name();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.CollectionTypeCS <em>Collection Type CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Collection Type CS</em>'.
   * @see modelConverter.use_language.use.CollectionTypeCS
   * @generated
   */
  EClass getCollectionTypeCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.CollectionTypeCS#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.CollectionTypeCS#getName()
   * @see #getCollectionTypeCS()
   * @generated
   */
  EAttribute getCollectionTypeCS_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.CollectionTypeCS#getOwnedType <em>Owned Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Type</em>'.
   * @see modelConverter.use_language.use.CollectionTypeCS#getOwnedType()
   * @see #getCollectionTypeCS()
   * @generated
   */
  EReference getCollectionTypeCS_OwnedType();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.CollectionTypeCS#getOwnedCollectionMultiplicity <em>Owned Collection Multiplicity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Collection Multiplicity</em>'.
   * @see modelConverter.use_language.use.CollectionTypeCS#getOwnedCollectionMultiplicity()
   * @see #getCollectionTypeCS()
   * @generated
   */
  EReference getCollectionTypeCS_OwnedCollectionMultiplicity();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.MapTypeCS <em>Map Type CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Map Type CS</em>'.
   * @see modelConverter.use_language.use.MapTypeCS
   * @generated
   */
  EClass getMapTypeCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.MapTypeCS#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.MapTypeCS#getName()
   * @see #getMapTypeCS()
   * @generated
   */
  EAttribute getMapTypeCS_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.MapTypeCS#getOwnedKeyType <em>Owned Key Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Key Type</em>'.
   * @see modelConverter.use_language.use.MapTypeCS#getOwnedKeyType()
   * @see #getMapTypeCS()
   * @generated
   */
  EReference getMapTypeCS_OwnedKeyType();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.MapTypeCS#getOwnedValueType <em>Owned Value Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Value Type</em>'.
   * @see modelConverter.use_language.use.MapTypeCS#getOwnedValueType()
   * @see #getMapTypeCS()
   * @generated
   */
  EReference getMapTypeCS_OwnedValueType();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.TupleTypeCS <em>Tuple Type CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tuple Type CS</em>'.
   * @see modelConverter.use_language.use.TupleTypeCS
   * @generated
   */
  EClass getTupleTypeCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.TupleTypeCS#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.TupleTypeCS#getName()
   * @see #getTupleTypeCS()
   * @generated
   */
  EAttribute getTupleTypeCS_Name();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.TupleTypeCS#getOwnedParts <em>Owned Parts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Owned Parts</em>'.
   * @see modelConverter.use_language.use.TupleTypeCS#getOwnedParts()
   * @see #getTupleTypeCS()
   * @generated
   */
  EReference getTupleTypeCS_OwnedParts();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.TuplePartCS <em>Tuple Part CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tuple Part CS</em>'.
   * @see modelConverter.use_language.use.TuplePartCS
   * @generated
   */
  EClass getTuplePartCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.TuplePartCS#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.TuplePartCS#getName()
   * @see #getTuplePartCS()
   * @generated
   */
  EAttribute getTuplePartCS_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.TuplePartCS#getOwnedType <em>Owned Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Type</em>'.
   * @see modelConverter.use_language.use.TuplePartCS#getOwnedType()
   * @see #getTuplePartCS()
   * @generated
   */
  EReference getTuplePartCS_OwnedType();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.CollectionPatternCS <em>Collection Pattern CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Collection Pattern CS</em>'.
   * @see modelConverter.use_language.use.CollectionPatternCS
   * @generated
   */
  EClass getCollectionPatternCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.CollectionPatternCS#getOwnedType <em>Owned Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Type</em>'.
   * @see modelConverter.use_language.use.CollectionPatternCS#getOwnedType()
   * @see #getCollectionPatternCS()
   * @generated
   */
  EReference getCollectionPatternCS_OwnedType();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.CollectionPatternCS#getOwnedParts <em>Owned Parts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Owned Parts</em>'.
   * @see modelConverter.use_language.use.CollectionPatternCS#getOwnedParts()
   * @see #getCollectionPatternCS()
   * @generated
   */
  EReference getCollectionPatternCS_OwnedParts();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.CollectionPatternCS#getRestVariableName <em>Rest Variable Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Rest Variable Name</em>'.
   * @see modelConverter.use_language.use.CollectionPatternCS#getRestVariableName()
   * @see #getCollectionPatternCS()
   * @generated
   */
  EAttribute getCollectionPatternCS_RestVariableName();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.PatternExpCS <em>Pattern Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pattern Exp CS</em>'.
   * @see modelConverter.use_language.use.PatternExpCS
   * @generated
   */
  EClass getPatternExpCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.PatternExpCS#getPatternVariableName <em>Pattern Variable Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Pattern Variable Name</em>'.
   * @see modelConverter.use_language.use.PatternExpCS#getPatternVariableName()
   * @see #getPatternExpCS()
   * @generated
   */
  EAttribute getPatternExpCS_PatternVariableName();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.PatternExpCS#getOwnedPatternType <em>Owned Pattern Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Pattern Type</em>'.
   * @see modelConverter.use_language.use.PatternExpCS#getOwnedPatternType()
   * @see #getPatternExpCS()
   * @generated
   */
  EReference getPatternExpCS_OwnedPatternType();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.TypedRefCS <em>Typed Ref CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Typed Ref CS</em>'.
   * @see modelConverter.use_language.use.TypedRefCS
   * @generated
   */
  EClass getTypedRefCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.TypedRefCS#getOwnedMultiplicity <em>Owned Multiplicity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Multiplicity</em>'.
   * @see modelConverter.use_language.use.TypedRefCS#getOwnedMultiplicity()
   * @see #getTypedRefCS()
   * @generated
   */
  EReference getTypedRefCS_OwnedMultiplicity();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.TypeLiteralExpCS <em>Type Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Literal Exp CS</em>'.
   * @see modelConverter.use_language.use.TypeLiteralExpCS
   * @generated
   */
  EClass getTypeLiteralExpCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.TypeLiteralExpCS#getOwnedType <em>Owned Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Type</em>'.
   * @see modelConverter.use_language.use.TypeLiteralExpCS#getOwnedType()
   * @see #getTypeLiteralExpCS()
   * @generated
   */
  EReference getTypeLiteralExpCS_OwnedType();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.TypeNameExpCS <em>Type Name Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Name Exp CS</em>'.
   * @see modelConverter.use_language.use.TypeNameExpCS
   * @generated
   */
  EClass getTypeNameExpCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.TypeNameExpCS#getOwnedPathName <em>Owned Path Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Path Name</em>'.
   * @see modelConverter.use_language.use.TypeNameExpCS#getOwnedPathName()
   * @see #getTypeNameExpCS()
   * @generated
   */
  EReference getTypeNameExpCS_OwnedPathName();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.TypeNameExpCS#getOwnedCurlyBracketedClause <em>Owned Curly Bracketed Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Curly Bracketed Clause</em>'.
   * @see modelConverter.use_language.use.TypeNameExpCS#getOwnedCurlyBracketedClause()
   * @see #getTypeNameExpCS()
   * @generated
   */
  EReference getTypeNameExpCS_OwnedCurlyBracketedClause();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.TypeNameExpCS#getOwnedPatternGuard <em>Owned Pattern Guard</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Pattern Guard</em>'.
   * @see modelConverter.use_language.use.TypeNameExpCS#getOwnedPatternGuard()
   * @see #getTypeNameExpCS()
   * @generated
   */
  EReference getTypeNameExpCS_OwnedPatternGuard();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.CurlyBracketedClauseCS <em>Curly Bracketed Clause CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Curly Bracketed Clause CS</em>'.
   * @see modelConverter.use_language.use.CurlyBracketedClauseCS
   * @generated
   */
  EClass getCurlyBracketedClauseCS();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.CurlyBracketedClauseCS#getOwnedParts <em>Owned Parts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Owned Parts</em>'.
   * @see modelConverter.use_language.use.CurlyBracketedClauseCS#getOwnedParts()
   * @see #getCurlyBracketedClauseCS()
   * @generated
   */
  EReference getCurlyBracketedClauseCS_OwnedParts();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.ShadowPartCS <em>Shadow Part CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Shadow Part CS</em>'.
   * @see modelConverter.use_language.use.ShadowPartCS
   * @generated
   */
  EClass getShadowPartCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.ShadowPartCS#getReferredProperty <em>Referred Property</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Referred Property</em>'.
   * @see modelConverter.use_language.use.ShadowPartCS#getReferredProperty()
   * @see #getShadowPartCS()
   * @generated
   */
  EAttribute getShadowPartCS_ReferredProperty();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.ShadowPartCS#getOwnedInitExpression <em>Owned Init Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Init Expression</em>'.
   * @see modelConverter.use_language.use.ShadowPartCS#getOwnedInitExpression()
   * @see #getShadowPartCS()
   * @generated
   */
  EReference getShadowPartCS_OwnedInitExpression();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.StringLiteralExpCS <em>String Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Literal Exp CS</em>'.
   * @see modelConverter.use_language.use.StringLiteralExpCS
   * @generated
   */
  EClass getStringLiteralExpCS();

  /**
   * Returns the meta object for the attribute list '{@link modelConverter.use_language.use.StringLiteralExpCS#getSegments <em>Segments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Segments</em>'.
   * @see modelConverter.use_language.use.StringLiteralExpCS#getSegments()
   * @see #getStringLiteralExpCS()
   * @generated
   */
  EAttribute getStringLiteralExpCS_Segments();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.MultiplicityBoundsCS <em>Multiplicity Bounds CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplicity Bounds CS</em>'.
   * @see modelConverter.use_language.use.MultiplicityBoundsCS
   * @generated
   */
  EClass getMultiplicityBoundsCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.MultiplicityBoundsCS#getLowerBound <em>Lower Bound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Lower Bound</em>'.
   * @see modelConverter.use_language.use.MultiplicityBoundsCS#getLowerBound()
   * @see #getMultiplicityBoundsCS()
   * @generated
   */
  EAttribute getMultiplicityBoundsCS_LowerBound();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.MultiplicityBoundsCS#getUpperBound <em>Upper Bound</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Upper Bound</em>'.
   * @see modelConverter.use_language.use.MultiplicityBoundsCS#getUpperBound()
   * @see #getMultiplicityBoundsCS()
   * @generated
   */
  EAttribute getMultiplicityBoundsCS_UpperBound();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.MultiplicityCS <em>Multiplicity CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplicity CS</em>'.
   * @see modelConverter.use_language.use.MultiplicityCS
   * @generated
   */
  EClass getMultiplicityCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.MultiplicityCS#getSymbol <em>Symbol</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Symbol</em>'.
   * @see modelConverter.use_language.use.MultiplicityCS#getSymbol()
   * @see #getMultiplicityCS()
   * @generated
   */
  EAttribute getMultiplicityCS_Symbol();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.MultiplicityStringCS <em>Multiplicity String CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplicity String CS</em>'.
   * @see modelConverter.use_language.use.MultiplicityStringCS
   * @generated
   */
  EClass getMultiplicityStringCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.MultiplicityStringCS#getStringBounds <em>String Bounds</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>String Bounds</em>'.
   * @see modelConverter.use_language.use.MultiplicityStringCS#getStringBounds()
   * @see #getMultiplicityStringCS()
   * @generated
   */
  EAttribute getMultiplicityStringCS_StringBounds();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.PathNameCS <em>Path Name CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Path Name CS</em>'.
   * @see modelConverter.use_language.use.PathNameCS
   * @generated
   */
  EClass getPathNameCS();

  /**
   * Returns the meta object for the attribute list '{@link modelConverter.use_language.use.PathNameCS#getOwnedPathElements <em>Owned Path Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Owned Path Elements</em>'.
   * @see modelConverter.use_language.use.PathNameCS#getOwnedPathElements()
   * @see #getPathNameCS()
   * @generated
   */
  EAttribute getPathNameCS_OwnedPathElements();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.ExpCS <em>Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exp CS</em>'.
   * @see modelConverter.use_language.use.ExpCS
   * @generated
   */
  EClass getExpCS();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.PrimitiveLiteralExpCS <em>Primitive Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primitive Literal Exp CS</em>'.
   * @see modelConverter.use_language.use.PrimitiveLiteralExpCS
   * @generated
   */
  EClass getPrimitiveLiteralExpCS();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.NameExpCS <em>Name Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Name Exp CS</em>'.
   * @see modelConverter.use_language.use.NameExpCS
   * @generated
   */
  EClass getNameExpCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.NameExpCS#getOwnedPathName <em>Owned Path Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Path Name</em>'.
   * @see modelConverter.use_language.use.NameExpCS#getOwnedPathName()
   * @see #getNameExpCS()
   * @generated
   */
  EReference getNameExpCS_OwnedPathName();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.NameExpCS#getOwnedSquareBracketedClauses <em>Owned Square Bracketed Clauses</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Owned Square Bracketed Clauses</em>'.
   * @see modelConverter.use_language.use.NameExpCS#getOwnedSquareBracketedClauses()
   * @see #getNameExpCS()
   * @generated
   */
  EReference getNameExpCS_OwnedSquareBracketedClauses();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.NameExpCS#getOwnedRoundBracketedClause <em>Owned Round Bracketed Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Round Bracketed Clause</em>'.
   * @see modelConverter.use_language.use.NameExpCS#getOwnedRoundBracketedClause()
   * @see #getNameExpCS()
   * @generated
   */
  EReference getNameExpCS_OwnedRoundBracketedClause();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.NameExpCS#getOwnedCurlyBracketedClause <em>Owned Curly Bracketed Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Curly Bracketed Clause</em>'.
   * @see modelConverter.use_language.use.NameExpCS#getOwnedCurlyBracketedClause()
   * @see #getNameExpCS()
   * @generated
   */
  EReference getNameExpCS_OwnedCurlyBracketedClause();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.NameExpCS#isIsPre <em>Is Pre</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Is Pre</em>'.
   * @see modelConverter.use_language.use.NameExpCS#isIsPre()
   * @see #getNameExpCS()
   * @generated
   */
  EAttribute getNameExpCS_IsPre();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.NameExpCS#isPre <em>Pre</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Pre</em>'.
   * @see modelConverter.use_language.use.NameExpCS#isPre()
   * @see #getNameExpCS()
   * @generated
   */
  EAttribute getNameExpCS_Pre();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.SquareBracketedClauseCS <em>Square Bracketed Clause CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Square Bracketed Clause CS</em>'.
   * @see modelConverter.use_language.use.SquareBracketedClauseCS
   * @generated
   */
  EClass getSquareBracketedClauseCS();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.SquareBracketedClauseCS#getOwnedTerms <em>Owned Terms</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Owned Terms</em>'.
   * @see modelConverter.use_language.use.SquareBracketedClauseCS#getOwnedTerms()
   * @see #getSquareBracketedClauseCS()
   * @generated
   */
  EReference getSquareBracketedClauseCS_OwnedTerms();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.CollectionLiteralExpCS <em>Collection Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Collection Literal Exp CS</em>'.
   * @see modelConverter.use_language.use.CollectionLiteralExpCS
   * @generated
   */
  EClass getCollectionLiteralExpCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.CollectionLiteralExpCS#getOwnedType <em>Owned Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Type</em>'.
   * @see modelConverter.use_language.use.CollectionLiteralExpCS#getOwnedType()
   * @see #getCollectionLiteralExpCS()
   * @generated
   */
  EReference getCollectionLiteralExpCS_OwnedType();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.CollectionLiteralExpCS#getOwnedParts <em>Owned Parts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Owned Parts</em>'.
   * @see modelConverter.use_language.use.CollectionLiteralExpCS#getOwnedParts()
   * @see #getCollectionLiteralExpCS()
   * @generated
   */
  EReference getCollectionLiteralExpCS_OwnedParts();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.CollectionLiteralPartCS <em>Collection Literal Part CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Collection Literal Part CS</em>'.
   * @see modelConverter.use_language.use.CollectionLiteralPartCS
   * @generated
   */
  EClass getCollectionLiteralPartCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.CollectionLiteralPartCS#getOwnedExpression <em>Owned Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Expression</em>'.
   * @see modelConverter.use_language.use.CollectionLiteralPartCS#getOwnedExpression()
   * @see #getCollectionLiteralPartCS()
   * @generated
   */
  EReference getCollectionLiteralPartCS_OwnedExpression();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.CollectionLiteralPartCS#getOwnedLastExpression <em>Owned Last Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Last Expression</em>'.
   * @see modelConverter.use_language.use.CollectionLiteralPartCS#getOwnedLastExpression()
   * @see #getCollectionLiteralPartCS()
   * @generated
   */
  EReference getCollectionLiteralPartCS_OwnedLastExpression();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.LambdaLiteralExpCS <em>Lambda Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Lambda Literal Exp CS</em>'.
   * @see modelConverter.use_language.use.LambdaLiteralExpCS
   * @generated
   */
  EClass getLambdaLiteralExpCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.LambdaLiteralExpCS#getOwnedExpressionCS <em>Owned Expression CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Expression CS</em>'.
   * @see modelConverter.use_language.use.LambdaLiteralExpCS#getOwnedExpressionCS()
   * @see #getLambdaLiteralExpCS()
   * @generated
   */
  EReference getLambdaLiteralExpCS_OwnedExpressionCS();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.MapLiteralExpCS <em>Map Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Map Literal Exp CS</em>'.
   * @see modelConverter.use_language.use.MapLiteralExpCS
   * @generated
   */
  EClass getMapLiteralExpCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.MapLiteralExpCS#getOwnedType <em>Owned Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Type</em>'.
   * @see modelConverter.use_language.use.MapLiteralExpCS#getOwnedType()
   * @see #getMapLiteralExpCS()
   * @generated
   */
  EReference getMapLiteralExpCS_OwnedType();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.MapLiteralExpCS#getOwnedParts <em>Owned Parts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Owned Parts</em>'.
   * @see modelConverter.use_language.use.MapLiteralExpCS#getOwnedParts()
   * @see #getMapLiteralExpCS()
   * @generated
   */
  EReference getMapLiteralExpCS_OwnedParts();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.MapLiteralPartCS <em>Map Literal Part CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Map Literal Part CS</em>'.
   * @see modelConverter.use_language.use.MapLiteralPartCS
   * @generated
   */
  EClass getMapLiteralPartCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.MapLiteralPartCS#getOwnedKey <em>Owned Key</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Key</em>'.
   * @see modelConverter.use_language.use.MapLiteralPartCS#getOwnedKey()
   * @see #getMapLiteralPartCS()
   * @generated
   */
  EReference getMapLiteralPartCS_OwnedKey();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.MapLiteralPartCS#getOwnedValue <em>Owned Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Value</em>'.
   * @see modelConverter.use_language.use.MapLiteralPartCS#getOwnedValue()
   * @see #getMapLiteralPartCS()
   * @generated
   */
  EReference getMapLiteralPartCS_OwnedValue();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.TupleLiteralExpCS <em>Tuple Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tuple Literal Exp CS</em>'.
   * @see modelConverter.use_language.use.TupleLiteralExpCS
   * @generated
   */
  EClass getTupleLiteralExpCS();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.TupleLiteralExpCS#getOwnedParts <em>Owned Parts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Owned Parts</em>'.
   * @see modelConverter.use_language.use.TupleLiteralExpCS#getOwnedParts()
   * @see #getTupleLiteralExpCS()
   * @generated
   */
  EReference getTupleLiteralExpCS_OwnedParts();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.TupleLiteralPartCS <em>Tuple Literal Part CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tuple Literal Part CS</em>'.
   * @see modelConverter.use_language.use.TupleLiteralPartCS
   * @generated
   */
  EClass getTupleLiteralPartCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.TupleLiteralPartCS#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.TupleLiteralPartCS#getName()
   * @see #getTupleLiteralPartCS()
   * @generated
   */
  EAttribute getTupleLiteralPartCS_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.TupleLiteralPartCS#getOwnedType <em>Owned Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Type</em>'.
   * @see modelConverter.use_language.use.TupleLiteralPartCS#getOwnedType()
   * @see #getTupleLiteralPartCS()
   * @generated
   */
  EReference getTupleLiteralPartCS_OwnedType();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.TupleLiteralPartCS#getOwnedInitExpression <em>Owned Init Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Init Expression</em>'.
   * @see modelConverter.use_language.use.TupleLiteralPartCS#getOwnedInitExpression()
   * @see #getTupleLiteralPartCS()
   * @generated
   */
  EReference getTupleLiteralPartCS_OwnedInitExpression();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.NumberLiteralExpCS <em>Number Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Number Literal Exp CS</em>'.
   * @see modelConverter.use_language.use.NumberLiteralExpCS
   * @generated
   */
  EClass getNumberLiteralExpCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.NumberLiteralExpCS#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see modelConverter.use_language.use.NumberLiteralExpCS#getValue()
   * @see #getNumberLiteralExpCS()
   * @generated
   */
  EAttribute getNumberLiteralExpCS_Value();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.BooleanLiteralExpCS <em>Boolean Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Literal Exp CS</em>'.
   * @see modelConverter.use_language.use.BooleanLiteralExpCS
   * @generated
   */
  EClass getBooleanLiteralExpCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.BooleanLiteralExpCS#getSymbol <em>Symbol</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Symbol</em>'.
   * @see modelConverter.use_language.use.BooleanLiteralExpCS#getSymbol()
   * @see #getBooleanLiteralExpCS()
   * @generated
   */
  EAttribute getBooleanLiteralExpCS_Symbol();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.UnlimitedNaturalLiteralExpCS <em>Unlimited Natural Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unlimited Natural Literal Exp CS</em>'.
   * @see modelConverter.use_language.use.UnlimitedNaturalLiteralExpCS
   * @generated
   */
  EClass getUnlimitedNaturalLiteralExpCS();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.InvalidLiteralExpCS <em>Invalid Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Invalid Literal Exp CS</em>'.
   * @see modelConverter.use_language.use.InvalidLiteralExpCS
   * @generated
   */
  EClass getInvalidLiteralExpCS();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.NullLiteralExpCS <em>Null Literal Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Null Literal Exp CS</em>'.
   * @see modelConverter.use_language.use.NullLiteralExpCS
   * @generated
   */
  EClass getNullLiteralExpCS();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.NestedExpCS <em>Nested Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Nested Exp CS</em>'.
   * @see modelConverter.use_language.use.NestedExpCS
   * @generated
   */
  EClass getNestedExpCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.NestedExpCS#getOwnedExpression <em>Owned Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Expression</em>'.
   * @see modelConverter.use_language.use.NestedExpCS#getOwnedExpression()
   * @see #getNestedExpCS()
   * @generated
   */
  EReference getNestedExpCS_OwnedExpression();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.IfExpCS <em>If Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Exp CS</em>'.
   * @see modelConverter.use_language.use.IfExpCS
   * @generated
   */
  EClass getIfExpCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.IfExpCS#getOwnedCondition <em>Owned Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Condition</em>'.
   * @see modelConverter.use_language.use.IfExpCS#getOwnedCondition()
   * @see #getIfExpCS()
   * @generated
   */
  EReference getIfExpCS_OwnedCondition();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.IfExpCS#getOwnedThenExpression <em>Owned Then Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Then Expression</em>'.
   * @see modelConverter.use_language.use.IfExpCS#getOwnedThenExpression()
   * @see #getIfExpCS()
   * @generated
   */
  EReference getIfExpCS_OwnedThenExpression();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.IfExpCS#getOwnedIfThenExpressions <em>Owned If Then Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Owned If Then Expressions</em>'.
   * @see modelConverter.use_language.use.IfExpCS#getOwnedIfThenExpressions()
   * @see #getIfExpCS()
   * @generated
   */
  EReference getIfExpCS_OwnedIfThenExpressions();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.IfExpCS#getOwnedElseExpression <em>Owned Else Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Else Expression</em>'.
   * @see modelConverter.use_language.use.IfExpCS#getOwnedElseExpression()
   * @see #getIfExpCS()
   * @generated
   */
  EReference getIfExpCS_OwnedElseExpression();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.IfThenExpCS <em>If Then Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Then Exp CS</em>'.
   * @see modelConverter.use_language.use.IfThenExpCS
   * @generated
   */
  EClass getIfThenExpCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.IfThenExpCS#getOwnedCondition <em>Owned Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Condition</em>'.
   * @see modelConverter.use_language.use.IfThenExpCS#getOwnedCondition()
   * @see #getIfThenExpCS()
   * @generated
   */
  EReference getIfThenExpCS_OwnedCondition();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.IfThenExpCS#getOwnedThenExpression <em>Owned Then Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Then Expression</em>'.
   * @see modelConverter.use_language.use.IfThenExpCS#getOwnedThenExpression()
   * @see #getIfThenExpCS()
   * @generated
   */
  EReference getIfThenExpCS_OwnedThenExpression();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.LetExpCS <em>Let Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Let Exp CS</em>'.
   * @see modelConverter.use_language.use.LetExpCS
   * @generated
   */
  EClass getLetExpCS();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.LetExpCS#getOwnedVariables <em>Owned Variables</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Owned Variables</em>'.
   * @see modelConverter.use_language.use.LetExpCS#getOwnedVariables()
   * @see #getLetExpCS()
   * @generated
   */
  EReference getLetExpCS_OwnedVariables();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.LetExpCS#getOwnedInExpression <em>Owned In Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned In Expression</em>'.
   * @see modelConverter.use_language.use.LetExpCS#getOwnedInExpression()
   * @see #getLetExpCS()
   * @generated
   */
  EReference getLetExpCS_OwnedInExpression();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.LetVariableCS <em>Let Variable CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Let Variable CS</em>'.
   * @see modelConverter.use_language.use.LetVariableCS
   * @generated
   */
  EClass getLetVariableCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.LetVariableCS#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.LetVariableCS#getName()
   * @see #getLetVariableCS()
   * @generated
   */
  EAttribute getLetVariableCS_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.LetVariableCS#getOwnedRoundBracketedClause <em>Owned Round Bracketed Clause</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Round Bracketed Clause</em>'.
   * @see modelConverter.use_language.use.LetVariableCS#getOwnedRoundBracketedClause()
   * @see #getLetVariableCS()
   * @generated
   */
  EReference getLetVariableCS_OwnedRoundBracketedClause();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.LetVariableCS#getOwnedType <em>Owned Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Type</em>'.
   * @see modelConverter.use_language.use.LetVariableCS#getOwnedType()
   * @see #getLetVariableCS()
   * @generated
   */
  EReference getLetVariableCS_OwnedType();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.LetVariableCS#getOwnedInitExpression <em>Owned Init Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Init Expression</em>'.
   * @see modelConverter.use_language.use.LetVariableCS#getOwnedInitExpression()
   * @see #getLetVariableCS()
   * @generated
   */
  EReference getLetVariableCS_OwnedInitExpression();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.RoundBracketedClauseCS <em>Round Bracketed Clause CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Round Bracketed Clause CS</em>'.
   * @see modelConverter.use_language.use.RoundBracketedClauseCS
   * @generated
   */
  EClass getRoundBracketedClauseCS();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.RoundBracketedClauseCS#getOwnedArguments <em>Owned Arguments</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Owned Arguments</em>'.
   * @see modelConverter.use_language.use.RoundBracketedClauseCS#getOwnedArguments()
   * @see #getRoundBracketedClauseCS()
   * @generated
   */
  EReference getRoundBracketedClauseCS_OwnedArguments();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.NavigatingArgCS <em>Navigating Arg CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Navigating Arg CS</em>'.
   * @see modelConverter.use_language.use.NavigatingArgCS
   * @generated
   */
  EClass getNavigatingArgCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.NavigatingArgCS#getPrefix <em>Prefix</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Prefix</em>'.
   * @see modelConverter.use_language.use.NavigatingArgCS#getPrefix()
   * @see #getNavigatingArgCS()
   * @generated
   */
  EAttribute getNavigatingArgCS_Prefix();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.NavigatingArgCS#getOwnedNameExpression <em>Owned Name Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Name Expression</em>'.
   * @see modelConverter.use_language.use.NavigatingArgCS#getOwnedNameExpression()
   * @see #getNavigatingArgCS()
   * @generated
   */
  EReference getNavigatingArgCS_OwnedNameExpression();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.NavigatingArgCS#getSymbolT <em>Symbol T</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Symbol T</em>'.
   * @see modelConverter.use_language.use.NavigatingArgCS#getSymbolT()
   * @see #getNavigatingArgCS()
   * @generated
   */
  EAttribute getNavigatingArgCS_SymbolT();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.NavigatingArgCS#getOwnedType <em>Owned Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Type</em>'.
   * @see modelConverter.use_language.use.NavigatingArgCS#getOwnedType()
   * @see #getNavigatingArgCS()
   * @generated
   */
  EReference getNavigatingArgCS_OwnedType();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.NavigatingArgCS#getSymbolIE <em>Symbol IE</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Symbol IE</em>'.
   * @see modelConverter.use_language.use.NavigatingArgCS#getSymbolIE()
   * @see #getNavigatingArgCS()
   * @generated
   */
  EAttribute getNavigatingArgCS_SymbolIE();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.NavigatingArgCS#getOwnedInitExpression <em>Owned Init Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Init Expression</em>'.
   * @see modelConverter.use_language.use.NavigatingArgCS#getOwnedInitExpression()
   * @see #getNavigatingArgCS()
   * @generated
   */
  EReference getNavigatingArgCS_OwnedInitExpression();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.NavigatingArgCS#getSymbolCI <em>Symbol CI</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Symbol CI</em>'.
   * @see modelConverter.use_language.use.NavigatingArgCS#getSymbolCI()
   * @see #getNavigatingArgCS()
   * @generated
   */
  EAttribute getNavigatingArgCS_SymbolCI();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.NavigatingArgCS#getOwnedCoIterator <em>Owned Co Iterator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Co Iterator</em>'.
   * @see modelConverter.use_language.use.NavigatingArgCS#getOwnedCoIterator()
   * @see #getNavigatingArgCS()
   * @generated
   */
  EReference getNavigatingArgCS_OwnedCoIterator();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.VariableCS <em>Variable CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable CS</em>'.
   * @see modelConverter.use_language.use.VariableCS
   * @generated
   */
  EClass getVariableCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.VariableCS#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.VariableCS#getName()
   * @see #getVariableCS()
   * @generated
   */
  EAttribute getVariableCS_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.VariableCS#getOwnedType <em>Owned Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Type</em>'.
   * @see modelConverter.use_language.use.VariableCS#getOwnedType()
   * @see #getVariableCS()
   * @generated
   */
  EReference getVariableCS_OwnedType();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.InfixExpCS <em>Infix Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Infix Exp CS</em>'.
   * @see modelConverter.use_language.use.InfixExpCS
   * @generated
   */
  EClass getInfixExpCS();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.InfixExpCS#getOwnedLeft <em>Owned Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Left</em>'.
   * @see modelConverter.use_language.use.InfixExpCS#getOwnedLeft()
   * @see #getInfixExpCS()
   * @generated
   */
  EReference getInfixExpCS_OwnedLeft();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.InfixExpCS#getOperator <em>Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operator</em>'.
   * @see modelConverter.use_language.use.InfixExpCS#getOperator()
   * @see #getInfixExpCS()
   * @generated
   */
  EAttribute getInfixExpCS_Operator();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.InfixExpCS#getOwnedRight <em>Owned Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Right</em>'.
   * @see modelConverter.use_language.use.InfixExpCS#getOwnedRight()
   * @see #getInfixExpCS()
   * @generated
   */
  EReference getInfixExpCS_OwnedRight();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.PrefixExpCS <em>Prefix Exp CS</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Prefix Exp CS</em>'.
   * @see modelConverter.use_language.use.PrefixExpCS
   * @generated
   */
  EClass getPrefixExpCS();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.PrefixExpCS#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.PrefixExpCS#getName()
   * @see #getPrefixExpCS()
   * @generated
   */
  EAttribute getPrefixExpCS_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.PrefixExpCS#getOwnedRight <em>Owned Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Owned Right</em>'.
   * @see modelConverter.use_language.use.PrefixExpCS#getOwnedRight()
   * @see #getPrefixExpCS()
   * @generated
   */
  EReference getPrefixExpCS_OwnedRight();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  UseFactory getUseFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ModelUSEImpl <em>Model USE</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ModelUSEImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getModelUSE()
     * @generated
     */
    EClass MODEL_USE = eINSTANCE.getModelUSE();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODEL_USE__NAME = eINSTANCE.getModelUSE_Name();

    /**
     * The meta object literal for the '<em><b>Enums</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL_USE__ENUMS = eINSTANCE.getModelUSE_Enums();

    /**
     * The meta object literal for the '<em><b>Packaged Element</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL_USE__PACKAGED_ELEMENT = eINSTANCE.getModelUSE_PackagedElement();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL_USE__CONSTRAINTS = eINSTANCE.getModelUSE_Constraints();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.MultiplicityImpl <em>Multiplicity</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.MultiplicityImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getMultiplicity()
     * @generated
     */
    EClass MULTIPLICITY = eINSTANCE.getMultiplicity();

    /**
     * The meta object literal for the '<em><b>Min Value</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLICITY__MIN_VALUE = eINSTANCE.getMultiplicity_MinValue();

    /**
     * The meta object literal for the '<em><b>Max Value</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLICITY__MAX_VALUE = eINSTANCE.getMultiplicity_MaxValue();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AllTypesImpl <em>All Types</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AllTypesImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAllTypes()
     * @generated
     */
    EClass ALL_TYPES = eINSTANCE.getAllTypes();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.TypeImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__NAME = eINSTANCE.getType_Name();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.CollectionTypeImpl <em>Collection Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.CollectionTypeImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getCollectionType()
     * @generated
     */
    EClass COLLECTION_TYPE = eINSTANCE.getCollectionType();

    /**
     * The meta object literal for the '<em><b>Collection</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLLECTION_TYPE__COLLECTION = eINSTANCE.getCollectionType_Collection();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION_TYPE__TYPE = eINSTANCE.getCollectionType_Type();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AllClassImpl <em>All Class</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AllClassImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAllClass()
     * @generated
     */
    EClass ALL_CLASS = eINSTANCE.getAllClass();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AllClassAndEnumImpl <em>All Class And Enum</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AllClassAndEnumImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAllClassAndEnum()
     * @generated
     */
    EClass ALL_CLASS_AND_ENUM = eINSTANCE.getAllClassAndEnum();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.SimpleTypesImpl <em>Simple Types</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.SimpleTypesImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getSimpleTypes()
     * @generated
     */
    EClass SIMPLE_TYPES = eINSTANCE.getSimpleTypes();

    /**
     * The meta object literal for the '<em><b>Default Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_TYPES__DEFAULT_TYPE = eINSTANCE.getSimpleTypes_DefaultType();

    /**
     * The meta object literal for the '<em><b>Referended</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_TYPES__REFERENDED = eINSTANCE.getSimpleTypes_Referended();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.EnumImpl <em>Enum</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.EnumImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getEnum()
     * @generated
     */
    EClass ENUM = eINSTANCE.getEnum();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENUM__NAME = eINSTANCE.getEnum_Name();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENUM__ELEMENTS = eINSTANCE.getEnum_Elements();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ClassImpl <em>Class</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ClassImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getClass_()
     * @generated
     */
    EClass CLASS = eINSTANCE.getClass_();

    /**
     * The meta object literal for the '<em><b>Abstract</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS__ABSTRACT = eINSTANCE.getClass_Abstract();

    /**
     * The meta object literal for the '<em><b>Generalization</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS__GENERALIZATION = eINSTANCE.getClass_Generalization();

    /**
     * The meta object literal for the '<em><b>Attributes</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS__ATTRIBUTES = eINSTANCE.getClass_Attributes();

    /**
     * The meta object literal for the '<em><b>Operations</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS__OPERATIONS = eINSTANCE.getClass_Operations();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS__CONSTRAINTS = eINSTANCE.getClass_Constraints();

    /**
     * The meta object literal for the '<em><b>Statemachines</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS__STATEMACHINES = eINSTANCE.getClass_Statemachines();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.GeneralizationImpl <em>Generalization</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.GeneralizationImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getGeneralization()
     * @generated
     */
    EClass GENERALIZATION = eINSTANCE.getGeneralization();

    /**
     * The meta object literal for the '<em><b>General</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GENERALIZATION__GENERAL = eINSTANCE.getGeneralization_General();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AssociationImpl <em>Association</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AssociationImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAssociation()
     * @generated
     */
    EClass ASSOCIATION = eINSTANCE.getAssociation();

    /**
     * The meta object literal for the '<em><b>Type Association</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSOCIATION__TYPE_ASSOCIATION = eINSTANCE.getAssociation_TypeAssociation();

    /**
     * The meta object literal for the '<em><b>Association Ends</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION__ASSOCIATION_ENDS = eINSTANCE.getAssociation_AssociationEnds();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AssociationEndImpl <em>Association End</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AssociationEndImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAssociationEnd()
     * @generated
     */
    EClass ASSOCIATION_END = eINSTANCE.getAssociationEnd();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_END__TYPE = eINSTANCE.getAssociationEnd_Type();

    /**
     * The meta object literal for the '<em><b>Mul</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_END__MUL = eINSTANCE.getAssociationEnd_Mul();

    /**
     * The meta object literal for the '<em><b>Role</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSOCIATION_END__ROLE = eINSTANCE.getAssociationEnd_Role();

    /**
     * The meta object literal for the '<em><b>Ordered</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSOCIATION_END__ORDERED = eINSTANCE.getAssociationEnd_Ordered();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AssociationClassImpl <em>Association Class</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AssociationClassImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAssociationClass()
     * @generated
     */
    EClass ASSOCIATION_CLASS = eINSTANCE.getAssociationClass();

    /**
     * The meta object literal for the '<em><b>Abstract</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSOCIATION_CLASS__ABSTRACT = eINSTANCE.getAssociationClass_Abstract();

    /**
     * The meta object literal for the '<em><b>Generalization</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_CLASS__GENERALIZATION = eINSTANCE.getAssociationClass_Generalization();

    /**
     * The meta object literal for the '<em><b>Association Ends</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_CLASS__ASSOCIATION_ENDS = eINSTANCE.getAssociationClass_AssociationEnds();

    /**
     * The meta object literal for the '<em><b>Attributes</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_CLASS__ATTRIBUTES = eINSTANCE.getAssociationClass_Attributes();

    /**
     * The meta object literal for the '<em><b>Operations</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_CLASS__OPERATIONS = eINSTANCE.getAssociationClass_Operations();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_CLASS__CONSTRAINTS = eINSTANCE.getAssociationClass_Constraints();

    /**
     * The meta object literal for the '<em><b>Statemachines</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_CLASS__STATEMACHINES = eINSTANCE.getAssociationClass_Statemachines();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AttributesBaseImpl <em>Attributes Base</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AttributesBaseImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAttributesBase()
     * @generated
     */
    EClass ATTRIBUTES_BASE = eINSTANCE.getAttributesBase();

    /**
     * The meta object literal for the '<em><b>Attributes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATTRIBUTES_BASE__ATTRIBUTES = eINSTANCE.getAttributesBase_Attributes();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AttributeImpl <em>Attribute</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AttributeImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAttribute()
     * @generated
     */
    EClass ATTRIBUTE = eINSTANCE.getAttribute();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE__NAME = eINSTANCE.getAttribute_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATTRIBUTE__TYPE = eINSTANCE.getAttribute_Type();

    /**
     * The meta object literal for the '<em><b>Init OCL</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATTRIBUTE__INIT_OCL = eINSTANCE.getAttribute_InitOCL();

    /**
     * The meta object literal for the '<em><b>Derive OCL</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATTRIBUTE__DERIVE_OCL = eINSTANCE.getAttribute_DeriveOCL();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationsBaseImpl <em>Operations Base</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationsBaseImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationsBase()
     * @generated
     */
    EClass OPERATIONS_BASE = eINSTANCE.getOperationsBase();

    /**
     * The meta object literal for the '<em><b>Operations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATIONS_BASE__OPERATIONS = eINSTANCE.getOperationsBase_Operations();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationTypeImpl <em>Operation Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationTypeImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationType()
     * @generated
     */
    EClass OPERATION_TYPE = eINSTANCE.getOperationType();

    /**
     * The meta object literal for the '<em><b>Operation Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_TYPE__OPERATION_DECLARATION = eINSTANCE.getOperationType_OperationDeclaration();

    /**
     * The meta object literal for the '<em><b>Conditions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_TYPE__CONDITIONS = eINSTANCE.getOperationType_Conditions();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationQueryImpl <em>Operation Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationQueryImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationQuery()
     * @generated
     */
    EClass OPERATION_QUERY = eINSTANCE.getOperationQuery();

    /**
     * The meta object literal for the '<em><b>Operationbody</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_QUERY__OPERATIONBODY = eINSTANCE.getOperationQuery_Operationbody();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationComplexImpl <em>Operation Complex</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationComplexImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationComplex()
     * @generated
     */
    EClass OPERATION_COMPLEX = eINSTANCE.getOperationComplex();

    /**
     * The meta object literal for the '<em><b>Operationbody</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATION_COMPLEX__OPERATIONBODY = eINSTANCE.getOperationComplex_Operationbody();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationDeclarationImpl <em>Operation Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationDeclarationImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationDeclaration()
     * @generated
     */
    EClass OPERATION_DECLARATION = eINSTANCE.getOperationDeclaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATION_DECLARATION__NAME = eINSTANCE.getOperationDeclaration_Name();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_DECLARATION__PARAMETERS = eINSTANCE.getOperationDeclaration_Parameters();

    /**
     * The meta object literal for the '<em><b>Return Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_DECLARATION__RETURN_TYPE = eINSTANCE.getOperationDeclaration_ReturnType();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ParameterImpl <em>Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ParameterImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getParameter()
     * @generated
     */
    EClass PARAMETER = eINSTANCE.getParameter();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAMETER__NAME = eINSTANCE.getParameter_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETER__TYPE = eINSTANCE.getParameter_Type();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.StateMachinesBaseImpl <em>State Machines Base</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.StateMachinesBaseImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getStateMachinesBase()
     * @generated
     */
    EClass STATE_MACHINES_BASE = eINSTANCE.getStateMachinesBase();

    /**
     * The meta object literal for the '<em><b>Statemachines</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATE_MACHINES_BASE__STATEMACHINES = eINSTANCE.getStateMachinesBase_Statemachines();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.StateMachineImpl <em>State Machine</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.StateMachineImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getStateMachine()
     * @generated
     */
    EClass STATE_MACHINE = eINSTANCE.getStateMachine();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STATE_MACHINE__NAME = eINSTANCE.getStateMachine_Name();

    /**
     * The meta object literal for the '<em><b>States</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATE_MACHINE__STATES = eINSTANCE.getStateMachine_States();

    /**
     * The meta object literal for the '<em><b>Transitions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATE_MACHINE__TRANSITIONS = eINSTANCE.getStateMachine_Transitions();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.StateImpl <em>State</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.StateImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getState()
     * @generated
     */
    EClass STATE = eINSTANCE.getState();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STATE__NAME = eINSTANCE.getState_Name();

    /**
     * The meta object literal for the '<em><b>Is Initial</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STATE__IS_INITIAL = eINSTANCE.getState_IsInitial();

    /**
     * The meta object literal for the '<em><b>Is Final</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STATE__IS_FINAL = eINSTANCE.getState_IsFinal();

    /**
     * The meta object literal for the '<em><b>Invariant</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATE__INVARIANT = eINSTANCE.getState_Invariant();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.TransitionImpl <em>Transition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.TransitionImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getTransition()
     * @generated
     */
    EClass TRANSITION = eINSTANCE.getTransition();

    /**
     * The meta object literal for the '<em><b>Source</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRANSITION__SOURCE = eINSTANCE.getTransition_Source();

    /**
     * The meta object literal for the '<em><b>Target</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRANSITION__TARGET = eINSTANCE.getTransition_Target();

    /**
     * The meta object literal for the '<em><b>Precondition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRANSITION__PRECONDITION = eINSTANCE.getTransition_Precondition();

    /**
     * The meta object literal for the '<em><b>Operation</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRANSITION__OPERATION = eINSTANCE.getTransition_Operation();

    /**
     * The meta object literal for the '<em><b>Postcondition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TRANSITION__POSTCONDITION = eINSTANCE.getTransition_Postcondition();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ConstraintsBaseImpl <em>Constraints Base</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ConstraintsBaseImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getConstraintsBase()
     * @generated
     */
    EClass CONSTRAINTS_BASE = eINSTANCE.getConstraintsBase();

    /**
     * The meta object literal for the '<em><b>Invariants</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINTS_BASE__INVARIANTS = eINSTANCE.getConstraintsBase_Invariants();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ConstrainsGeneralImpl <em>Constrains General</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ConstrainsGeneralImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getConstrainsGeneral()
     * @generated
     */
    EClass CONSTRAINS_GENERAL = eINSTANCE.getConstrainsGeneral();

    /**
     * The meta object literal for the '<em><b>Contexts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINS_GENERAL__CONTEXTS = eINSTANCE.getConstrainsGeneral_Contexts();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ContextsTypeImpl <em>Contexts Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ContextsTypeImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getContextsType()
     * @generated
     */
    EClass CONTEXTS_TYPE = eINSTANCE.getContextsType();

    /**
     * The meta object literal for the '<em><b>Classname</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONTEXTS_TYPE__CLASSNAME = eINSTANCE.getContextsType_Classname();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.InvariantContextImpl <em>Invariant Context</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.InvariantContextImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getInvariantContext()
     * @generated
     */
    EClass INVARIANT_CONTEXT = eINSTANCE.getInvariantContext();

    /**
     * The meta object literal for the '<em><b>Variablename</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INVARIANT_CONTEXT__VARIABLENAME = eINSTANCE.getInvariantContext_Variablename();

    /**
     * The meta object literal for the '<em><b>Invariants</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INVARIANT_CONTEXT__INVARIANTS = eINSTANCE.getInvariantContext_Invariants();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.InvariantDefinitionImpl <em>Invariant Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.InvariantDefinitionImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getInvariantDefinition()
     * @generated
     */
    EClass INVARIANT_DEFINITION = eINSTANCE.getInvariantDefinition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INVARIANT_DEFINITION__NAME = eINSTANCE.getInvariantDefinition_Name();

    /**
     * The meta object literal for the '<em><b>Oclexpression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INVARIANT_DEFINITION__OCLEXPRESSION = eINSTANCE.getInvariantDefinition_Oclexpression();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationContextImpl <em>Operation Context</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationContextImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationContext()
     * @generated
     */
    EClass OPERATION_CONTEXT = eINSTANCE.getOperationContext();

    /**
     * The meta object literal for the '<em><b>Constrains</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_CONTEXT__CONSTRAINS = eINSTANCE.getOperationContext_Constrains();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationConstraintsImpl <em>Operation Constraints</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationConstraintsImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationConstraints()
     * @generated
     */
    EClass OPERATION_CONSTRAINTS = eINSTANCE.getOperationConstraints();

    /**
     * The meta object literal for the '<em><b>Operation Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_CONSTRAINTS__OPERATION_DECLARATION = eINSTANCE.getOperationConstraints_OperationDeclaration();

    /**
     * The meta object literal for the '<em><b>Conditions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_CONSTRAINTS__CONDITIONS = eINSTANCE.getOperationConstraints_Conditions();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ConditionTypeImpl <em>Condition Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ConditionTypeImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getConditionType()
     * @generated
     */
    EClass CONDITION_TYPE = eINSTANCE.getConditionType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONDITION_TYPE__NAME = eINSTANCE.getConditionType_Name();

    /**
     * The meta object literal for the '<em><b>Oclexpression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITION_TYPE__OCLEXPRESSION = eINSTANCE.getConditionType_Oclexpression();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.PreconditionImpl <em>Precondition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.PreconditionImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getPrecondition()
     * @generated
     */
    EClass PRECONDITION = eINSTANCE.getPrecondition();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.PostconditionImpl <em>Postcondition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.PostconditionImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getPostcondition()
     * @generated
     */
    EClass POSTCONDITION = eINSTANCE.getPostcondition();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.PrimitiveTypeRefCSImpl <em>Primitive Type Ref CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.PrimitiveTypeRefCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getPrimitiveTypeRefCS()
     * @generated
     */
    EClass PRIMITIVE_TYPE_REF_CS = eINSTANCE.getPrimitiveTypeRefCS();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRIMITIVE_TYPE_REF_CS__NAME = eINSTANCE.getPrimitiveTypeRefCS_Name();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.CollectionTypeCSImpl <em>Collection Type CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.CollectionTypeCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getCollectionTypeCS()
     * @generated
     */
    EClass COLLECTION_TYPE_CS = eINSTANCE.getCollectionTypeCS();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLLECTION_TYPE_CS__NAME = eINSTANCE.getCollectionTypeCS_Name();

    /**
     * The meta object literal for the '<em><b>Owned Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION_TYPE_CS__OWNED_TYPE = eINSTANCE.getCollectionTypeCS_OwnedType();

    /**
     * The meta object literal for the '<em><b>Owned Collection Multiplicity</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION_TYPE_CS__OWNED_COLLECTION_MULTIPLICITY = eINSTANCE.getCollectionTypeCS_OwnedCollectionMultiplicity();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.MapTypeCSImpl <em>Map Type CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.MapTypeCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getMapTypeCS()
     * @generated
     */
    EClass MAP_TYPE_CS = eINSTANCE.getMapTypeCS();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MAP_TYPE_CS__NAME = eINSTANCE.getMapTypeCS_Name();

    /**
     * The meta object literal for the '<em><b>Owned Key Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_TYPE_CS__OWNED_KEY_TYPE = eINSTANCE.getMapTypeCS_OwnedKeyType();

    /**
     * The meta object literal for the '<em><b>Owned Value Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_TYPE_CS__OWNED_VALUE_TYPE = eINSTANCE.getMapTypeCS_OwnedValueType();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.TupleTypeCSImpl <em>Tuple Type CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.TupleTypeCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getTupleTypeCS()
     * @generated
     */
    EClass TUPLE_TYPE_CS = eINSTANCE.getTupleTypeCS();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TUPLE_TYPE_CS__NAME = eINSTANCE.getTupleTypeCS_Name();

    /**
     * The meta object literal for the '<em><b>Owned Parts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TUPLE_TYPE_CS__OWNED_PARTS = eINSTANCE.getTupleTypeCS_OwnedParts();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.TuplePartCSImpl <em>Tuple Part CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.TuplePartCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getTuplePartCS()
     * @generated
     */
    EClass TUPLE_PART_CS = eINSTANCE.getTuplePartCS();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TUPLE_PART_CS__NAME = eINSTANCE.getTuplePartCS_Name();

    /**
     * The meta object literal for the '<em><b>Owned Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TUPLE_PART_CS__OWNED_TYPE = eINSTANCE.getTuplePartCS_OwnedType();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.CollectionPatternCSImpl <em>Collection Pattern CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.CollectionPatternCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getCollectionPatternCS()
     * @generated
     */
    EClass COLLECTION_PATTERN_CS = eINSTANCE.getCollectionPatternCS();

    /**
     * The meta object literal for the '<em><b>Owned Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION_PATTERN_CS__OWNED_TYPE = eINSTANCE.getCollectionPatternCS_OwnedType();

    /**
     * The meta object literal for the '<em><b>Owned Parts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION_PATTERN_CS__OWNED_PARTS = eINSTANCE.getCollectionPatternCS_OwnedParts();

    /**
     * The meta object literal for the '<em><b>Rest Variable Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLLECTION_PATTERN_CS__REST_VARIABLE_NAME = eINSTANCE.getCollectionPatternCS_RestVariableName();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.PatternExpCSImpl <em>Pattern Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.PatternExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getPatternExpCS()
     * @generated
     */
    EClass PATTERN_EXP_CS = eINSTANCE.getPatternExpCS();

    /**
     * The meta object literal for the '<em><b>Pattern Variable Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PATTERN_EXP_CS__PATTERN_VARIABLE_NAME = eINSTANCE.getPatternExpCS_PatternVariableName();

    /**
     * The meta object literal for the '<em><b>Owned Pattern Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_EXP_CS__OWNED_PATTERN_TYPE = eINSTANCE.getPatternExpCS_OwnedPatternType();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.TypedRefCSImpl <em>Typed Ref CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.TypedRefCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getTypedRefCS()
     * @generated
     */
    EClass TYPED_REF_CS = eINSTANCE.getTypedRefCS();

    /**
     * The meta object literal for the '<em><b>Owned Multiplicity</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPED_REF_CS__OWNED_MULTIPLICITY = eINSTANCE.getTypedRefCS_OwnedMultiplicity();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.TypeLiteralExpCSImpl <em>Type Literal Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.TypeLiteralExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getTypeLiteralExpCS()
     * @generated
     */
    EClass TYPE_LITERAL_EXP_CS = eINSTANCE.getTypeLiteralExpCS();

    /**
     * The meta object literal for the '<em><b>Owned Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_LITERAL_EXP_CS__OWNED_TYPE = eINSTANCE.getTypeLiteralExpCS_OwnedType();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.TypeNameExpCSImpl <em>Type Name Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.TypeNameExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getTypeNameExpCS()
     * @generated
     */
    EClass TYPE_NAME_EXP_CS = eINSTANCE.getTypeNameExpCS();

    /**
     * The meta object literal for the '<em><b>Owned Path Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_NAME_EXP_CS__OWNED_PATH_NAME = eINSTANCE.getTypeNameExpCS_OwnedPathName();

    /**
     * The meta object literal for the '<em><b>Owned Curly Bracketed Clause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_NAME_EXP_CS__OWNED_CURLY_BRACKETED_CLAUSE = eINSTANCE.getTypeNameExpCS_OwnedCurlyBracketedClause();

    /**
     * The meta object literal for the '<em><b>Owned Pattern Guard</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_NAME_EXP_CS__OWNED_PATTERN_GUARD = eINSTANCE.getTypeNameExpCS_OwnedPatternGuard();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.CurlyBracketedClauseCSImpl <em>Curly Bracketed Clause CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.CurlyBracketedClauseCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getCurlyBracketedClauseCS()
     * @generated
     */
    EClass CURLY_BRACKETED_CLAUSE_CS = eINSTANCE.getCurlyBracketedClauseCS();

    /**
     * The meta object literal for the '<em><b>Owned Parts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CURLY_BRACKETED_CLAUSE_CS__OWNED_PARTS = eINSTANCE.getCurlyBracketedClauseCS_OwnedParts();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ShadowPartCSImpl <em>Shadow Part CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ShadowPartCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getShadowPartCS()
     * @generated
     */
    EClass SHADOW_PART_CS = eINSTANCE.getShadowPartCS();

    /**
     * The meta object literal for the '<em><b>Referred Property</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SHADOW_PART_CS__REFERRED_PROPERTY = eINSTANCE.getShadowPartCS_ReferredProperty();

    /**
     * The meta object literal for the '<em><b>Owned Init Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SHADOW_PART_CS__OWNED_INIT_EXPRESSION = eINSTANCE.getShadowPartCS_OwnedInitExpression();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.StringLiteralExpCSImpl <em>String Literal Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.StringLiteralExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getStringLiteralExpCS()
     * @generated
     */
    EClass STRING_LITERAL_EXP_CS = eINSTANCE.getStringLiteralExpCS();

    /**
     * The meta object literal for the '<em><b>Segments</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_LITERAL_EXP_CS__SEGMENTS = eINSTANCE.getStringLiteralExpCS_Segments();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.MultiplicityBoundsCSImpl <em>Multiplicity Bounds CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.MultiplicityBoundsCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getMultiplicityBoundsCS()
     * @generated
     */
    EClass MULTIPLICITY_BOUNDS_CS = eINSTANCE.getMultiplicityBoundsCS();

    /**
     * The meta object literal for the '<em><b>Lower Bound</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLICITY_BOUNDS_CS__LOWER_BOUND = eINSTANCE.getMultiplicityBoundsCS_LowerBound();

    /**
     * The meta object literal for the '<em><b>Upper Bound</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLICITY_BOUNDS_CS__UPPER_BOUND = eINSTANCE.getMultiplicityBoundsCS_UpperBound();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.MultiplicityCSImpl <em>Multiplicity CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.MultiplicityCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getMultiplicityCS()
     * @generated
     */
    EClass MULTIPLICITY_CS = eINSTANCE.getMultiplicityCS();

    /**
     * The meta object literal for the '<em><b>Symbol</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLICITY_CS__SYMBOL = eINSTANCE.getMultiplicityCS_Symbol();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.MultiplicityStringCSImpl <em>Multiplicity String CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.MultiplicityStringCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getMultiplicityStringCS()
     * @generated
     */
    EClass MULTIPLICITY_STRING_CS = eINSTANCE.getMultiplicityStringCS();

    /**
     * The meta object literal for the '<em><b>String Bounds</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLICITY_STRING_CS__STRING_BOUNDS = eINSTANCE.getMultiplicityStringCS_StringBounds();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.PathNameCSImpl <em>Path Name CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.PathNameCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getPathNameCS()
     * @generated
     */
    EClass PATH_NAME_CS = eINSTANCE.getPathNameCS();

    /**
     * The meta object literal for the '<em><b>Owned Path Elements</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PATH_NAME_CS__OWNED_PATH_ELEMENTS = eINSTANCE.getPathNameCS_OwnedPathElements();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ExpCSImpl <em>Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getExpCS()
     * @generated
     */
    EClass EXP_CS = eINSTANCE.getExpCS();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.PrimitiveLiteralExpCSImpl <em>Primitive Literal Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.PrimitiveLiteralExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getPrimitiveLiteralExpCS()
     * @generated
     */
    EClass PRIMITIVE_LITERAL_EXP_CS = eINSTANCE.getPrimitiveLiteralExpCS();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.NameExpCSImpl <em>Name Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.NameExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getNameExpCS()
     * @generated
     */
    EClass NAME_EXP_CS = eINSTANCE.getNameExpCS();

    /**
     * The meta object literal for the '<em><b>Owned Path Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAME_EXP_CS__OWNED_PATH_NAME = eINSTANCE.getNameExpCS_OwnedPathName();

    /**
     * The meta object literal for the '<em><b>Owned Square Bracketed Clauses</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAME_EXP_CS__OWNED_SQUARE_BRACKETED_CLAUSES = eINSTANCE.getNameExpCS_OwnedSquareBracketedClauses();

    /**
     * The meta object literal for the '<em><b>Owned Round Bracketed Clause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAME_EXP_CS__OWNED_ROUND_BRACKETED_CLAUSE = eINSTANCE.getNameExpCS_OwnedRoundBracketedClause();

    /**
     * The meta object literal for the '<em><b>Owned Curly Bracketed Clause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAME_EXP_CS__OWNED_CURLY_BRACKETED_CLAUSE = eINSTANCE.getNameExpCS_OwnedCurlyBracketedClause();

    /**
     * The meta object literal for the '<em><b>Is Pre</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAME_EXP_CS__IS_PRE = eINSTANCE.getNameExpCS_IsPre();

    /**
     * The meta object literal for the '<em><b>Pre</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAME_EXP_CS__PRE = eINSTANCE.getNameExpCS_Pre();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.SquareBracketedClauseCSImpl <em>Square Bracketed Clause CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.SquareBracketedClauseCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getSquareBracketedClauseCS()
     * @generated
     */
    EClass SQUARE_BRACKETED_CLAUSE_CS = eINSTANCE.getSquareBracketedClauseCS();

    /**
     * The meta object literal for the '<em><b>Owned Terms</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SQUARE_BRACKETED_CLAUSE_CS__OWNED_TERMS = eINSTANCE.getSquareBracketedClauseCS_OwnedTerms();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.CollectionLiteralExpCSImpl <em>Collection Literal Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.CollectionLiteralExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getCollectionLiteralExpCS()
     * @generated
     */
    EClass COLLECTION_LITERAL_EXP_CS = eINSTANCE.getCollectionLiteralExpCS();

    /**
     * The meta object literal for the '<em><b>Owned Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION_LITERAL_EXP_CS__OWNED_TYPE = eINSTANCE.getCollectionLiteralExpCS_OwnedType();

    /**
     * The meta object literal for the '<em><b>Owned Parts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION_LITERAL_EXP_CS__OWNED_PARTS = eINSTANCE.getCollectionLiteralExpCS_OwnedParts();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.CollectionLiteralPartCSImpl <em>Collection Literal Part CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.CollectionLiteralPartCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getCollectionLiteralPartCS()
     * @generated
     */
    EClass COLLECTION_LITERAL_PART_CS = eINSTANCE.getCollectionLiteralPartCS();

    /**
     * The meta object literal for the '<em><b>Owned Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION_LITERAL_PART_CS__OWNED_EXPRESSION = eINSTANCE.getCollectionLiteralPartCS_OwnedExpression();

    /**
     * The meta object literal for the '<em><b>Owned Last Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION_LITERAL_PART_CS__OWNED_LAST_EXPRESSION = eINSTANCE.getCollectionLiteralPartCS_OwnedLastExpression();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.LambdaLiteralExpCSImpl <em>Lambda Literal Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.LambdaLiteralExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getLambdaLiteralExpCS()
     * @generated
     */
    EClass LAMBDA_LITERAL_EXP_CS = eINSTANCE.getLambdaLiteralExpCS();

    /**
     * The meta object literal for the '<em><b>Owned Expression CS</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LAMBDA_LITERAL_EXP_CS__OWNED_EXPRESSION_CS = eINSTANCE.getLambdaLiteralExpCS_OwnedExpressionCS();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.MapLiteralExpCSImpl <em>Map Literal Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.MapLiteralExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getMapLiteralExpCS()
     * @generated
     */
    EClass MAP_LITERAL_EXP_CS = eINSTANCE.getMapLiteralExpCS();

    /**
     * The meta object literal for the '<em><b>Owned Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_LITERAL_EXP_CS__OWNED_TYPE = eINSTANCE.getMapLiteralExpCS_OwnedType();

    /**
     * The meta object literal for the '<em><b>Owned Parts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_LITERAL_EXP_CS__OWNED_PARTS = eINSTANCE.getMapLiteralExpCS_OwnedParts();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.MapLiteralPartCSImpl <em>Map Literal Part CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.MapLiteralPartCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getMapLiteralPartCS()
     * @generated
     */
    EClass MAP_LITERAL_PART_CS = eINSTANCE.getMapLiteralPartCS();

    /**
     * The meta object literal for the '<em><b>Owned Key</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_LITERAL_PART_CS__OWNED_KEY = eINSTANCE.getMapLiteralPartCS_OwnedKey();

    /**
     * The meta object literal for the '<em><b>Owned Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAP_LITERAL_PART_CS__OWNED_VALUE = eINSTANCE.getMapLiteralPartCS_OwnedValue();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.TupleLiteralExpCSImpl <em>Tuple Literal Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.TupleLiteralExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getTupleLiteralExpCS()
     * @generated
     */
    EClass TUPLE_LITERAL_EXP_CS = eINSTANCE.getTupleLiteralExpCS();

    /**
     * The meta object literal for the '<em><b>Owned Parts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TUPLE_LITERAL_EXP_CS__OWNED_PARTS = eINSTANCE.getTupleLiteralExpCS_OwnedParts();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.TupleLiteralPartCSImpl <em>Tuple Literal Part CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.TupleLiteralPartCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getTupleLiteralPartCS()
     * @generated
     */
    EClass TUPLE_LITERAL_PART_CS = eINSTANCE.getTupleLiteralPartCS();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TUPLE_LITERAL_PART_CS__NAME = eINSTANCE.getTupleLiteralPartCS_Name();

    /**
     * The meta object literal for the '<em><b>Owned Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TUPLE_LITERAL_PART_CS__OWNED_TYPE = eINSTANCE.getTupleLiteralPartCS_OwnedType();

    /**
     * The meta object literal for the '<em><b>Owned Init Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TUPLE_LITERAL_PART_CS__OWNED_INIT_EXPRESSION = eINSTANCE.getTupleLiteralPartCS_OwnedInitExpression();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.NumberLiteralExpCSImpl <em>Number Literal Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.NumberLiteralExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getNumberLiteralExpCS()
     * @generated
     */
    EClass NUMBER_LITERAL_EXP_CS = eINSTANCE.getNumberLiteralExpCS();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMBER_LITERAL_EXP_CS__VALUE = eINSTANCE.getNumberLiteralExpCS_Value();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.BooleanLiteralExpCSImpl <em>Boolean Literal Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.BooleanLiteralExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getBooleanLiteralExpCS()
     * @generated
     */
    EClass BOOLEAN_LITERAL_EXP_CS = eINSTANCE.getBooleanLiteralExpCS();

    /**
     * The meta object literal for the '<em><b>Symbol</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOLEAN_LITERAL_EXP_CS__SYMBOL = eINSTANCE.getBooleanLiteralExpCS_Symbol();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.UnlimitedNaturalLiteralExpCSImpl <em>Unlimited Natural Literal Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.UnlimitedNaturalLiteralExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getUnlimitedNaturalLiteralExpCS()
     * @generated
     */
    EClass UNLIMITED_NATURAL_LITERAL_EXP_CS = eINSTANCE.getUnlimitedNaturalLiteralExpCS();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.InvalidLiteralExpCSImpl <em>Invalid Literal Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.InvalidLiteralExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getInvalidLiteralExpCS()
     * @generated
     */
    EClass INVALID_LITERAL_EXP_CS = eINSTANCE.getInvalidLiteralExpCS();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.NullLiteralExpCSImpl <em>Null Literal Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.NullLiteralExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getNullLiteralExpCS()
     * @generated
     */
    EClass NULL_LITERAL_EXP_CS = eINSTANCE.getNullLiteralExpCS();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.NestedExpCSImpl <em>Nested Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.NestedExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getNestedExpCS()
     * @generated
     */
    EClass NESTED_EXP_CS = eINSTANCE.getNestedExpCS();

    /**
     * The meta object literal for the '<em><b>Owned Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NESTED_EXP_CS__OWNED_EXPRESSION = eINSTANCE.getNestedExpCS_OwnedExpression();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.IfExpCSImpl <em>If Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.IfExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getIfExpCS()
     * @generated
     */
    EClass IF_EXP_CS = eINSTANCE.getIfExpCS();

    /**
     * The meta object literal for the '<em><b>Owned Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXP_CS__OWNED_CONDITION = eINSTANCE.getIfExpCS_OwnedCondition();

    /**
     * The meta object literal for the '<em><b>Owned Then Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXP_CS__OWNED_THEN_EXPRESSION = eINSTANCE.getIfExpCS_OwnedThenExpression();

    /**
     * The meta object literal for the '<em><b>Owned If Then Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXP_CS__OWNED_IF_THEN_EXPRESSIONS = eINSTANCE.getIfExpCS_OwnedIfThenExpressions();

    /**
     * The meta object literal for the '<em><b>Owned Else Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXP_CS__OWNED_ELSE_EXPRESSION = eINSTANCE.getIfExpCS_OwnedElseExpression();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.IfThenExpCSImpl <em>If Then Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.IfThenExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getIfThenExpCS()
     * @generated
     */
    EClass IF_THEN_EXP_CS = eINSTANCE.getIfThenExpCS();

    /**
     * The meta object literal for the '<em><b>Owned Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_THEN_EXP_CS__OWNED_CONDITION = eINSTANCE.getIfThenExpCS_OwnedCondition();

    /**
     * The meta object literal for the '<em><b>Owned Then Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_THEN_EXP_CS__OWNED_THEN_EXPRESSION = eINSTANCE.getIfThenExpCS_OwnedThenExpression();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.LetExpCSImpl <em>Let Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.LetExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getLetExpCS()
     * @generated
     */
    EClass LET_EXP_CS = eINSTANCE.getLetExpCS();

    /**
     * The meta object literal for the '<em><b>Owned Variables</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LET_EXP_CS__OWNED_VARIABLES = eINSTANCE.getLetExpCS_OwnedVariables();

    /**
     * The meta object literal for the '<em><b>Owned In Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LET_EXP_CS__OWNED_IN_EXPRESSION = eINSTANCE.getLetExpCS_OwnedInExpression();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.LetVariableCSImpl <em>Let Variable CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.LetVariableCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getLetVariableCS()
     * @generated
     */
    EClass LET_VARIABLE_CS = eINSTANCE.getLetVariableCS();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LET_VARIABLE_CS__NAME = eINSTANCE.getLetVariableCS_Name();

    /**
     * The meta object literal for the '<em><b>Owned Round Bracketed Clause</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LET_VARIABLE_CS__OWNED_ROUND_BRACKETED_CLAUSE = eINSTANCE.getLetVariableCS_OwnedRoundBracketedClause();

    /**
     * The meta object literal for the '<em><b>Owned Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LET_VARIABLE_CS__OWNED_TYPE = eINSTANCE.getLetVariableCS_OwnedType();

    /**
     * The meta object literal for the '<em><b>Owned Init Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LET_VARIABLE_CS__OWNED_INIT_EXPRESSION = eINSTANCE.getLetVariableCS_OwnedInitExpression();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.RoundBracketedClauseCSImpl <em>Round Bracketed Clause CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.RoundBracketedClauseCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getRoundBracketedClauseCS()
     * @generated
     */
    EClass ROUND_BRACKETED_CLAUSE_CS = eINSTANCE.getRoundBracketedClauseCS();

    /**
     * The meta object literal for the '<em><b>Owned Arguments</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROUND_BRACKETED_CLAUSE_CS__OWNED_ARGUMENTS = eINSTANCE.getRoundBracketedClauseCS_OwnedArguments();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.NavigatingArgCSImpl <em>Navigating Arg CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.NavigatingArgCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getNavigatingArgCS()
     * @generated
     */
    EClass NAVIGATING_ARG_CS = eINSTANCE.getNavigatingArgCS();

    /**
     * The meta object literal for the '<em><b>Prefix</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAVIGATING_ARG_CS__PREFIX = eINSTANCE.getNavigatingArgCS_Prefix();

    /**
     * The meta object literal for the '<em><b>Owned Name Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAVIGATING_ARG_CS__OWNED_NAME_EXPRESSION = eINSTANCE.getNavigatingArgCS_OwnedNameExpression();

    /**
     * The meta object literal for the '<em><b>Symbol T</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAVIGATING_ARG_CS__SYMBOL_T = eINSTANCE.getNavigatingArgCS_SymbolT();

    /**
     * The meta object literal for the '<em><b>Owned Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAVIGATING_ARG_CS__OWNED_TYPE = eINSTANCE.getNavigatingArgCS_OwnedType();

    /**
     * The meta object literal for the '<em><b>Symbol IE</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAVIGATING_ARG_CS__SYMBOL_IE = eINSTANCE.getNavigatingArgCS_SymbolIE();

    /**
     * The meta object literal for the '<em><b>Owned Init Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAVIGATING_ARG_CS__OWNED_INIT_EXPRESSION = eINSTANCE.getNavigatingArgCS_OwnedInitExpression();

    /**
     * The meta object literal for the '<em><b>Symbol CI</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NAVIGATING_ARG_CS__SYMBOL_CI = eINSTANCE.getNavigatingArgCS_SymbolCI();

    /**
     * The meta object literal for the '<em><b>Owned Co Iterator</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NAVIGATING_ARG_CS__OWNED_CO_ITERATOR = eINSTANCE.getNavigatingArgCS_OwnedCoIterator();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.VariableCSImpl <em>Variable CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.VariableCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getVariableCS()
     * @generated
     */
    EClass VARIABLE_CS = eINSTANCE.getVariableCS();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_CS__NAME = eINSTANCE.getVariableCS_Name();

    /**
     * The meta object literal for the '<em><b>Owned Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_CS__OWNED_TYPE = eINSTANCE.getVariableCS_OwnedType();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.InfixExpCSImpl <em>Infix Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.InfixExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getInfixExpCS()
     * @generated
     */
    EClass INFIX_EXP_CS = eINSTANCE.getInfixExpCS();

    /**
     * The meta object literal for the '<em><b>Owned Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INFIX_EXP_CS__OWNED_LEFT = eINSTANCE.getInfixExpCS_OwnedLeft();

    /**
     * The meta object literal for the '<em><b>Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INFIX_EXP_CS__OPERATOR = eINSTANCE.getInfixExpCS_Operator();

    /**
     * The meta object literal for the '<em><b>Owned Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INFIX_EXP_CS__OWNED_RIGHT = eINSTANCE.getInfixExpCS_OwnedRight();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.PrefixExpCSImpl <em>Prefix Exp CS</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.PrefixExpCSImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getPrefixExpCS()
     * @generated
     */
    EClass PREFIX_EXP_CS = eINSTANCE.getPrefixExpCS();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PREFIX_EXP_CS__NAME = eINSTANCE.getPrefixExpCS_Name();

    /**
     * The meta object literal for the '<em><b>Owned Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PREFIX_EXP_CS__OWNED_RIGHT = eINSTANCE.getPrefixExpCS_OwnedRight();

  }

} //UsePackage
