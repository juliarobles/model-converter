/**
 * generated by Xtext 2.25.0
 */
package modelConverter.use_language.use.impl;

import modelConverter.use_language.use.OperationConstraints;
import modelConverter.use_language.use.OperationContext;
import modelConverter.use_language.use.UsePackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Operation Context</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link modelConverter.use_language.use.impl.OperationContextImpl#getConstrains <em>Constrains</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OperationContextImpl extends ContextsTypeImpl implements OperationContext
{
  /**
   * The cached value of the '{@link #getConstrains() <em>Constrains</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstrains()
   * @generated
   * @ordered
   */
  protected OperationConstraints constrains;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OperationContextImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UsePackage.Literals.OPERATION_CONTEXT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OperationConstraints getConstrains()
  {
    return constrains;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstrains(OperationConstraints newConstrains, NotificationChain msgs)
  {
    OperationConstraints oldConstrains = constrains;
    constrains = newConstrains;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UsePackage.OPERATION_CONTEXT__CONSTRAINS, oldConstrains, newConstrains);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConstrains(OperationConstraints newConstrains)
  {
    if (newConstrains != constrains)
    {
      NotificationChain msgs = null;
      if (constrains != null)
        msgs = ((InternalEObject)constrains).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UsePackage.OPERATION_CONTEXT__CONSTRAINS, null, msgs);
      if (newConstrains != null)
        msgs = ((InternalEObject)newConstrains).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UsePackage.OPERATION_CONTEXT__CONSTRAINS, null, msgs);
      msgs = basicSetConstrains(newConstrains, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UsePackage.OPERATION_CONTEXT__CONSTRAINS, newConstrains, newConstrains));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case UsePackage.OPERATION_CONTEXT__CONSTRAINS:
        return basicSetConstrains(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UsePackage.OPERATION_CONTEXT__CONSTRAINS:
        return getConstrains();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UsePackage.OPERATION_CONTEXT__CONSTRAINS:
        setConstrains((OperationConstraints)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UsePackage.OPERATION_CONTEXT__CONSTRAINS:
        setConstrains((OperationConstraints)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UsePackage.OPERATION_CONTEXT__CONSTRAINS:
        return constrains != null;
    }
    return super.eIsSet(featureID);
  }

} //OperationContextImpl
