/**
 * generated by Xtext 2.25.0
 */
package modelConverter.use_language.use;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see modelConverter.use_language.use.UseFactory
 * @model kind="package"
 * @generated
 */
public interface UsePackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "use";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.USE.lenguage_use_xtext";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "use";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  UsePackage eINSTANCE = modelConverter.use_language.use.impl.UsePackageImpl.init();

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ModelImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__NAME = 0;

  /**
   * The feature id for the '<em><b>Enums</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__ENUMS = 1;

  /**
   * The feature id for the '<em><b>Packaged Element</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__PACKAGED_ELEMENT = 2;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__CONSTRAINTS = 3;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.MultiplicityImpl <em>Multiplicity</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.MultiplicityImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getMultiplicity()
   * @generated
   */
  int MULTIPLICITY = 1;

  /**
   * The feature id for the '<em><b>Min Value</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY__MIN_VALUE = 0;

  /**
   * The feature id for the '<em><b>Max Value</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY__MAX_VALUE = 1;

  /**
   * The number of structural features of the '<em>Multiplicity</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICITY_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AllTypesImpl <em>All Types</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AllTypesImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAllTypes()
   * @generated
   */
  int ALL_TYPES = 2;

  /**
   * The number of structural features of the '<em>All Types</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_TYPES_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.TypeImpl <em>Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.TypeImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getType()
   * @generated
   */
  int TYPE = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__NAME = 0;

  /**
   * The number of structural features of the '<em>Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.CollectionTypeImpl <em>Collection Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.CollectionTypeImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getCollectionType()
   * @generated
   */
  int COLLECTION_TYPE = 4;

  /**
   * The feature id for the '<em><b>Collection</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_TYPE__COLLECTION = ALL_TYPES_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_TYPE__TYPE = ALL_TYPES_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Collection Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COLLECTION_TYPE_FEATURE_COUNT = ALL_TYPES_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AllClassAndEnumImpl <em>All Class And Enum</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AllClassAndEnumImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAllClassAndEnum()
   * @generated
   */
  int ALL_CLASS_AND_ENUM = 6;

  /**
   * The number of structural features of the '<em>All Class And Enum</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_CLASS_AND_ENUM_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AllClassImpl <em>All Class</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AllClassImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAllClass()
   * @generated
   */
  int ALL_CLASS = 5;

  /**
   * The number of structural features of the '<em>All Class</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALL_CLASS_FEATURE_COUNT = ALL_CLASS_AND_ENUM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.SimpleTypesImpl <em>Simple Types</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.SimpleTypesImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getSimpleTypes()
   * @generated
   */
  int SIMPLE_TYPES = 7;

  /**
   * The feature id for the '<em><b>Default Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPES__DEFAULT_TYPE = ALL_TYPES_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Referended</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPES__REFERENDED = ALL_TYPES_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Simple Types</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPES_FEATURE_COUNT = ALL_TYPES_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.EnumImpl <em>Enum</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.EnumImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getEnum()
   * @generated
   */
  int ENUM = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUM__NAME = ALL_CLASS_AND_ENUM_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUM__ELEMENTS = ALL_CLASS_AND_ENUM_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Enum</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUM_FEATURE_COUNT = ALL_CLASS_AND_ENUM_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ClassImpl <em>Class</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ClassImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getClass_()
   * @generated
   */
  int CLASS = 9;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Abstract</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__ABSTRACT = TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Generalization</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__GENERALIZATION = TYPE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Attributes</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__ATTRIBUTES = TYPE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Operations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__OPERATIONS = TYPE_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS__CONSTRAINTS = TYPE_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Class</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLASS_FEATURE_COUNT = TYPE_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.GeneralizationImpl <em>Generalization</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.GeneralizationImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getGeneralization()
   * @generated
   */
  int GENERALIZATION = 10;

  /**
   * The feature id for the '<em><b>General</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GENERALIZATION__GENERAL = 0;

  /**
   * The number of structural features of the '<em>Generalization</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GENERALIZATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AssociationImpl <em>Association</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AssociationImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAssociation()
   * @generated
   */
  int ASSOCIATION = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Type Association</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__TYPE_ASSOCIATION = TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Association Ends</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION__ASSOCIATION_ENDS = TYPE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Association</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_FEATURE_COUNT = TYPE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AssociationEndImpl <em>Association End</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AssociationEndImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAssociationEnd()
   * @generated
   */
  int ASSOCIATION_END = 12;

  /**
   * The feature id for the '<em><b>Type</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_END__TYPE = 0;

  /**
   * The feature id for the '<em><b>Mul</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_END__MUL = 1;

  /**
   * The feature id for the '<em><b>Role</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_END__ROLE = 2;

  /**
   * The feature id for the '<em><b>Ordered</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_END__ORDERED = 3;

  /**
   * The number of structural features of the '<em>Association End</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_END_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AssociationClassImpl <em>Association Class</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AssociationClassImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAssociationClass()
   * @generated
   */
  int ASSOCIATION_CLASS = 13;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__NAME = TYPE__NAME;

  /**
   * The feature id for the '<em><b>Abstract</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__ABSTRACT = TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Generalization</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__GENERALIZATION = TYPE_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Association Ends</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__ASSOCIATION_ENDS = TYPE_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Attributes</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__ATTRIBUTES = TYPE_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Operations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__OPERATIONS = TYPE_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Constraints</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS__CONSTRAINTS = TYPE_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>Association Class</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSOCIATION_CLASS_FEATURE_COUNT = TYPE_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AttributesBaseImpl <em>Attributes Base</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AttributesBaseImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAttributesBase()
   * @generated
   */
  int ATTRIBUTES_BASE = 14;

  /**
   * The feature id for the '<em><b>Attributes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTES_BASE__ATTRIBUTES = 0;

  /**
   * The number of structural features of the '<em>Attributes Base</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTES_BASE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.AttributeImpl <em>Attribute</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.AttributeImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getAttribute()
   * @generated
   */
  int ATTRIBUTE = 15;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE__TYPE = 1;

  /**
   * The number of structural features of the '<em>Attribute</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATTRIBUTE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationsBaseImpl <em>Operations Base</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationsBaseImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationsBase()
   * @generated
   */
  int OPERATIONS_BASE = 16;

  /**
   * The feature id for the '<em><b>Operations</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_BASE__OPERATIONS = 0;

  /**
   * The number of structural features of the '<em>Operations Base</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATIONS_BASE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationTypeImpl <em>Operation Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationTypeImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationType()
   * @generated
   */
  int OPERATION_TYPE = 17;

  /**
   * The feature id for the '<em><b>Operation Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_TYPE__OPERATION_DECLARATION = 0;

  /**
   * The feature id for the '<em><b>Operationbody</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_TYPE__OPERATIONBODY = 1;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_TYPE__CONDITIONS = 2;

  /**
   * The number of structural features of the '<em>Operation Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_TYPE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationQueryImpl <em>Operation Query</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationQueryImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationQuery()
   * @generated
   */
  int OPERATION_QUERY = 18;

  /**
   * The feature id for the '<em><b>Operation Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_QUERY__OPERATION_DECLARATION = OPERATION_TYPE__OPERATION_DECLARATION;

  /**
   * The feature id for the '<em><b>Operationbody</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_QUERY__OPERATIONBODY = OPERATION_TYPE__OPERATIONBODY;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_QUERY__CONDITIONS = OPERATION_TYPE__CONDITIONS;

  /**
   * The number of structural features of the '<em>Operation Query</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_QUERY_FEATURE_COUNT = OPERATION_TYPE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationComplexImpl <em>Operation Complex</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationComplexImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationComplex()
   * @generated
   */
  int OPERATION_COMPLEX = 19;

  /**
   * The feature id for the '<em><b>Operation Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_COMPLEX__OPERATION_DECLARATION = OPERATION_TYPE__OPERATION_DECLARATION;

  /**
   * The feature id for the '<em><b>Operationbody</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_COMPLEX__OPERATIONBODY = OPERATION_TYPE__OPERATIONBODY;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_COMPLEX__CONDITIONS = OPERATION_TYPE__CONDITIONS;

  /**
   * The number of structural features of the '<em>Operation Complex</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_COMPLEX_FEATURE_COUNT = OPERATION_TYPE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationDeclarationImpl <em>Operation Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationDeclarationImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationDeclaration()
   * @generated
   */
  int OPERATION_DECLARATION = 20;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_DECLARATION__NAME = 0;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_DECLARATION__PARAMETERS = 1;

  /**
   * The feature id for the '<em><b>Return Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_DECLARATION__RETURN_TYPE = 2;

  /**
   * The number of structural features of the '<em>Operation Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_DECLARATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ParameterImpl <em>Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ParameterImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getParameter()
   * @generated
   */
  int PARAMETER = 21;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER__TYPE = 1;

  /**
   * The number of structural features of the '<em>Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ConstraintsBaseImpl <em>Constraints Base</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ConstraintsBaseImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getConstraintsBase()
   * @generated
   */
  int CONSTRAINTS_BASE = 22;

  /**
   * The feature id for the '<em><b>Invariants</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINTS_BASE__INVARIANTS = 0;

  /**
   * The number of structural features of the '<em>Constraints Base</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINTS_BASE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ConstrainsGeneralImpl <em>Constrains General</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ConstrainsGeneralImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getConstrainsGeneral()
   * @generated
   */
  int CONSTRAINS_GENERAL = 23;

  /**
   * The feature id for the '<em><b>Contexts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINS_GENERAL__CONTEXTS = 0;

  /**
   * The number of structural features of the '<em>Constrains General</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTRAINS_GENERAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ContextsTypeImpl <em>Contexts Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ContextsTypeImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getContextsType()
   * @generated
   */
  int CONTEXTS_TYPE = 24;

  /**
   * The feature id for the '<em><b>Classname</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTEXTS_TYPE__CLASSNAME = 0;

  /**
   * The number of structural features of the '<em>Contexts Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONTEXTS_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.InvariantContextImpl <em>Invariant Context</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.InvariantContextImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getInvariantContext()
   * @generated
   */
  int INVARIANT_CONTEXT = 25;

  /**
   * The feature id for the '<em><b>Classname</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_CONTEXT__CLASSNAME = CONTEXTS_TYPE__CLASSNAME;

  /**
   * The feature id for the '<em><b>Variablename</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_CONTEXT__VARIABLENAME = CONTEXTS_TYPE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Invariants</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_CONTEXT__INVARIANTS = CONTEXTS_TYPE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Invariant Context</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_CONTEXT_FEATURE_COUNT = CONTEXTS_TYPE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.InvariantDefinitionImpl <em>Invariant Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.InvariantDefinitionImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getInvariantDefinition()
   * @generated
   */
  int INVARIANT_DEFINITION = 26;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_DEFINITION__NAME = 0;

  /**
   * The feature id for the '<em><b>Oclexpression</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_DEFINITION__OCLEXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Invariant Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INVARIANT_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationContextImpl <em>Operation Context</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationContextImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationContext()
   * @generated
   */
  int OPERATION_CONTEXT = 27;

  /**
   * The feature id for the '<em><b>Classname</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CONTEXT__CLASSNAME = CONTEXTS_TYPE__CLASSNAME;

  /**
   * The feature id for the '<em><b>Constrains</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CONTEXT__CONSTRAINS = CONTEXTS_TYPE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Operation Context</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CONTEXT_FEATURE_COUNT = CONTEXTS_TYPE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.OperationConstraintsImpl <em>Operation Constraints</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.OperationConstraintsImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationConstraints()
   * @generated
   */
  int OPERATION_CONSTRAINTS = 28;

  /**
   * The feature id for the '<em><b>Operation Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CONSTRAINTS__OPERATION_DECLARATION = 0;

  /**
   * The feature id for the '<em><b>Conditions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CONSTRAINTS__CONDITIONS = 1;

  /**
   * The number of structural features of the '<em>Operation Constraints</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPERATION_CONSTRAINTS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.ConditionTypeImpl <em>Condition Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.ConditionTypeImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getConditionType()
   * @generated
   */
  int CONDITION_TYPE = 29;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_TYPE__NAME = 0;

  /**
   * The feature id for the '<em><b>Oclexpression</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_TYPE__OCLEXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Condition Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITION_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.PreconditionImpl <em>Precondition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.PreconditionImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getPrecondition()
   * @generated
   */
  int PRECONDITION = 30;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECONDITION__NAME = CONDITION_TYPE__NAME;

  /**
   * The feature id for the '<em><b>Oclexpression</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECONDITION__OCLEXPRESSION = CONDITION_TYPE__OCLEXPRESSION;

  /**
   * The number of structural features of the '<em>Precondition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECONDITION_FEATURE_COUNT = CONDITION_TYPE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link modelConverter.use_language.use.impl.PostconditionImpl <em>Postcondition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see modelConverter.use_language.use.impl.PostconditionImpl
   * @see modelConverter.use_language.use.impl.UsePackageImpl#getPostcondition()
   * @generated
   */
  int POSTCONDITION = 31;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSTCONDITION__NAME = CONDITION_TYPE__NAME;

  /**
   * The feature id for the '<em><b>Oclexpression</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSTCONDITION__OCLEXPRESSION = CONDITION_TYPE__OCLEXPRESSION;

  /**
   * The number of structural features of the '<em>Postcondition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POSTCONDITION_FEATURE_COUNT = CONDITION_TYPE_FEATURE_COUNT + 0;


  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see modelConverter.use_language.use.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Model#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.Model#getName()
   * @see #getModel()
   * @generated
   */
  EAttribute getModel_Name();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.Model#getEnums <em>Enums</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Enums</em>'.
   * @see modelConverter.use_language.use.Model#getEnums()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Enums();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.Model#getPackagedElement <em>Packaged Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Packaged Element</em>'.
   * @see modelConverter.use_language.use.Model#getPackagedElement()
   * @see #getModel()
   * @generated
   */
  EReference getModel_PackagedElement();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Model#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constraints</em>'.
   * @see modelConverter.use_language.use.Model#getConstraints()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Constraints();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Multiplicity <em>Multiplicity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplicity</em>'.
   * @see modelConverter.use_language.use.Multiplicity
   * @generated
   */
  EClass getMultiplicity();

  /**
   * Returns the meta object for the attribute list '{@link modelConverter.use_language.use.Multiplicity#getMinValue <em>Min Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Min Value</em>'.
   * @see modelConverter.use_language.use.Multiplicity#getMinValue()
   * @see #getMultiplicity()
   * @generated
   */
  EAttribute getMultiplicity_MinValue();

  /**
   * Returns the meta object for the attribute list '{@link modelConverter.use_language.use.Multiplicity#getMaxValue <em>Max Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Max Value</em>'.
   * @see modelConverter.use_language.use.Multiplicity#getMaxValue()
   * @see #getMultiplicity()
   * @generated
   */
  EAttribute getMultiplicity_MaxValue();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.AllTypes <em>All Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>All Types</em>'.
   * @see modelConverter.use_language.use.AllTypes
   * @generated
   */
  EClass getAllTypes();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type</em>'.
   * @see modelConverter.use_language.use.Type
   * @generated
   */
  EClass getType();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Type#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.Type#getName()
   * @see #getType()
   * @generated
   */
  EAttribute getType_Name();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.CollectionType <em>Collection Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Collection Type</em>'.
   * @see modelConverter.use_language.use.CollectionType
   * @generated
   */
  EClass getCollectionType();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.CollectionType#getCollection <em>Collection</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Collection</em>'.
   * @see modelConverter.use_language.use.CollectionType#getCollection()
   * @see #getCollectionType()
   * @generated
   */
  EAttribute getCollectionType_Collection();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.CollectionType#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Type</em>'.
   * @see modelConverter.use_language.use.CollectionType#getType()
   * @see #getCollectionType()
   * @generated
   */
  EReference getCollectionType_Type();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.AllClass <em>All Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>All Class</em>'.
   * @see modelConverter.use_language.use.AllClass
   * @generated
   */
  EClass getAllClass();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.AllClassAndEnum <em>All Class And Enum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>All Class And Enum</em>'.
   * @see modelConverter.use_language.use.AllClassAndEnum
   * @generated
   */
  EClass getAllClassAndEnum();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.SimpleTypes <em>Simple Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Types</em>'.
   * @see modelConverter.use_language.use.SimpleTypes
   * @generated
   */
  EClass getSimpleTypes();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.SimpleTypes#getDefaultType <em>Default Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Default Type</em>'.
   * @see modelConverter.use_language.use.SimpleTypes#getDefaultType()
   * @see #getSimpleTypes()
   * @generated
   */
  EAttribute getSimpleTypes_DefaultType();

  /**
   * Returns the meta object for the reference '{@link modelConverter.use_language.use.SimpleTypes#getReferended <em>Referended</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Referended</em>'.
   * @see modelConverter.use_language.use.SimpleTypes#getReferended()
   * @see #getSimpleTypes()
   * @generated
   */
  EReference getSimpleTypes_Referended();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Enum <em>Enum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Enum</em>'.
   * @see modelConverter.use_language.use.Enum
   * @generated
   */
  EClass getEnum();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Enum#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.Enum#getName()
   * @see #getEnum()
   * @generated
   */
  EAttribute getEnum_Name();

  /**
   * Returns the meta object for the attribute list '{@link modelConverter.use_language.use.Enum#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Elements</em>'.
   * @see modelConverter.use_language.use.Enum#getElements()
   * @see #getEnum()
   * @generated
   */
  EAttribute getEnum_Elements();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Class <em>Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Class</em>'.
   * @see modelConverter.use_language.use.Class
   * @generated
   */
  EClass getClass_();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Class#isAbstract <em>Abstract</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Abstract</em>'.
   * @see modelConverter.use_language.use.Class#isAbstract()
   * @see #getClass_()
   * @generated
   */
  EAttribute getClass_Abstract();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.Class#getGeneralization <em>Generalization</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Generalization</em>'.
   * @see modelConverter.use_language.use.Class#getGeneralization()
   * @see #getClass_()
   * @generated
   */
  EReference getClass_Generalization();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Class#getAttributes <em>Attributes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Attributes</em>'.
   * @see modelConverter.use_language.use.Class#getAttributes()
   * @see #getClass_()
   * @generated
   */
  EReference getClass_Attributes();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Class#getOperations <em>Operations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operations</em>'.
   * @see modelConverter.use_language.use.Class#getOperations()
   * @see #getClass_()
   * @generated
   */
  EReference getClass_Operations();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Class#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constraints</em>'.
   * @see modelConverter.use_language.use.Class#getConstraints()
   * @see #getClass_()
   * @generated
   */
  EReference getClass_Constraints();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Generalization <em>Generalization</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Generalization</em>'.
   * @see modelConverter.use_language.use.Generalization
   * @generated
   */
  EClass getGeneralization();

  /**
   * Returns the meta object for the reference '{@link modelConverter.use_language.use.Generalization#getGeneral <em>General</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>General</em>'.
   * @see modelConverter.use_language.use.Generalization#getGeneral()
   * @see #getGeneralization()
   * @generated
   */
  EReference getGeneralization_General();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Association <em>Association</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Association</em>'.
   * @see modelConverter.use_language.use.Association
   * @generated
   */
  EClass getAssociation();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Association#getTypeAssociation <em>Type Association</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type Association</em>'.
   * @see modelConverter.use_language.use.Association#getTypeAssociation()
   * @see #getAssociation()
   * @generated
   */
  EAttribute getAssociation_TypeAssociation();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.Association#getAssociationEnds <em>Association Ends</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Association Ends</em>'.
   * @see modelConverter.use_language.use.Association#getAssociationEnds()
   * @see #getAssociation()
   * @generated
   */
  EReference getAssociation_AssociationEnds();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.AssociationEnd <em>Association End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Association End</em>'.
   * @see modelConverter.use_language.use.AssociationEnd
   * @generated
   */
  EClass getAssociationEnd();

  /**
   * Returns the meta object for the reference '{@link modelConverter.use_language.use.AssociationEnd#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Type</em>'.
   * @see modelConverter.use_language.use.AssociationEnd#getType()
   * @see #getAssociationEnd()
   * @generated
   */
  EReference getAssociationEnd_Type();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.AssociationEnd#getMul <em>Mul</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Mul</em>'.
   * @see modelConverter.use_language.use.AssociationEnd#getMul()
   * @see #getAssociationEnd()
   * @generated
   */
  EReference getAssociationEnd_Mul();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.AssociationEnd#getRole <em>Role</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Role</em>'.
   * @see modelConverter.use_language.use.AssociationEnd#getRole()
   * @see #getAssociationEnd()
   * @generated
   */
  EAttribute getAssociationEnd_Role();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.AssociationEnd#isOrdered <em>Ordered</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Ordered</em>'.
   * @see modelConverter.use_language.use.AssociationEnd#isOrdered()
   * @see #getAssociationEnd()
   * @generated
   */
  EAttribute getAssociationEnd_Ordered();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.AssociationClass <em>Association Class</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Association Class</em>'.
   * @see modelConverter.use_language.use.AssociationClass
   * @generated
   */
  EClass getAssociationClass();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.AssociationClass#isAbstract <em>Abstract</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Abstract</em>'.
   * @see modelConverter.use_language.use.AssociationClass#isAbstract()
   * @see #getAssociationClass()
   * @generated
   */
  EAttribute getAssociationClass_Abstract();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.AssociationClass#getGeneralization <em>Generalization</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Generalization</em>'.
   * @see modelConverter.use_language.use.AssociationClass#getGeneralization()
   * @see #getAssociationClass()
   * @generated
   */
  EReference getAssociationClass_Generalization();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.AssociationClass#getAssociationEnds <em>Association Ends</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Association Ends</em>'.
   * @see modelConverter.use_language.use.AssociationClass#getAssociationEnds()
   * @see #getAssociationClass()
   * @generated
   */
  EReference getAssociationClass_AssociationEnds();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.AssociationClass#getAttributes <em>Attributes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Attributes</em>'.
   * @see modelConverter.use_language.use.AssociationClass#getAttributes()
   * @see #getAssociationClass()
   * @generated
   */
  EReference getAssociationClass_Attributes();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.AssociationClass#getOperations <em>Operations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operations</em>'.
   * @see modelConverter.use_language.use.AssociationClass#getOperations()
   * @see #getAssociationClass()
   * @generated
   */
  EReference getAssociationClass_Operations();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.AssociationClass#getConstraints <em>Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constraints</em>'.
   * @see modelConverter.use_language.use.AssociationClass#getConstraints()
   * @see #getAssociationClass()
   * @generated
   */
  EReference getAssociationClass_Constraints();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.AttributesBase <em>Attributes Base</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Attributes Base</em>'.
   * @see modelConverter.use_language.use.AttributesBase
   * @generated
   */
  EClass getAttributesBase();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.AttributesBase#getAttributes <em>Attributes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Attributes</em>'.
   * @see modelConverter.use_language.use.AttributesBase#getAttributes()
   * @see #getAttributesBase()
   * @generated
   */
  EReference getAttributesBase_Attributes();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Attribute <em>Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Attribute</em>'.
   * @see modelConverter.use_language.use.Attribute
   * @generated
   */
  EClass getAttribute();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Attribute#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.Attribute#getName()
   * @see #getAttribute()
   * @generated
   */
  EAttribute getAttribute_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Attribute#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see modelConverter.use_language.use.Attribute#getType()
   * @see #getAttribute()
   * @generated
   */
  EReference getAttribute_Type();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationsBase <em>Operations Base</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operations Base</em>'.
   * @see modelConverter.use_language.use.OperationsBase
   * @generated
   */
  EClass getOperationsBase();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.OperationsBase#getOperations <em>Operations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Operations</em>'.
   * @see modelConverter.use_language.use.OperationsBase#getOperations()
   * @see #getOperationsBase()
   * @generated
   */
  EReference getOperationsBase_Operations();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationType <em>Operation Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Type</em>'.
   * @see modelConverter.use_language.use.OperationType
   * @generated
   */
  EClass getOperationType();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.OperationType#getOperationDeclaration <em>Operation Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operation Declaration</em>'.
   * @see modelConverter.use_language.use.OperationType#getOperationDeclaration()
   * @see #getOperationType()
   * @generated
   */
  EReference getOperationType_OperationDeclaration();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.OperationType#getOperationbody <em>Operationbody</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Operationbody</em>'.
   * @see modelConverter.use_language.use.OperationType#getOperationbody()
   * @see #getOperationType()
   * @generated
   */
  EAttribute getOperationType_Operationbody();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.OperationType#getConditions <em>Conditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Conditions</em>'.
   * @see modelConverter.use_language.use.OperationType#getConditions()
   * @see #getOperationType()
   * @generated
   */
  EReference getOperationType_Conditions();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationQuery <em>Operation Query</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Query</em>'.
   * @see modelConverter.use_language.use.OperationQuery
   * @generated
   */
  EClass getOperationQuery();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationComplex <em>Operation Complex</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Complex</em>'.
   * @see modelConverter.use_language.use.OperationComplex
   * @generated
   */
  EClass getOperationComplex();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationDeclaration <em>Operation Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Declaration</em>'.
   * @see modelConverter.use_language.use.OperationDeclaration
   * @generated
   */
  EClass getOperationDeclaration();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.OperationDeclaration#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.OperationDeclaration#getName()
   * @see #getOperationDeclaration()
   * @generated
   */
  EAttribute getOperationDeclaration_Name();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.OperationDeclaration#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see modelConverter.use_language.use.OperationDeclaration#getParameters()
   * @see #getOperationDeclaration()
   * @generated
   */
  EReference getOperationDeclaration_Parameters();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.OperationDeclaration#getReturnType <em>Return Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Return Type</em>'.
   * @see modelConverter.use_language.use.OperationDeclaration#getReturnType()
   * @see #getOperationDeclaration()
   * @generated
   */
  EReference getOperationDeclaration_ReturnType();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Parameter <em>Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parameter</em>'.
   * @see modelConverter.use_language.use.Parameter
   * @generated
   */
  EClass getParameter();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.Parameter#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.Parameter#getName()
   * @see #getParameter()
   * @generated
   */
  EAttribute getParameter_Name();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.Parameter#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see modelConverter.use_language.use.Parameter#getType()
   * @see #getParameter()
   * @generated
   */
  EReference getParameter_Type();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.ConstraintsBase <em>Constraints Base</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constraints Base</em>'.
   * @see modelConverter.use_language.use.ConstraintsBase
   * @generated
   */
  EClass getConstraintsBase();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.ConstraintsBase#getInvariants <em>Invariants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Invariants</em>'.
   * @see modelConverter.use_language.use.ConstraintsBase#getInvariants()
   * @see #getConstraintsBase()
   * @generated
   */
  EReference getConstraintsBase_Invariants();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.ConstrainsGeneral <em>Constrains General</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constrains General</em>'.
   * @see modelConverter.use_language.use.ConstrainsGeneral
   * @generated
   */
  EClass getConstrainsGeneral();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.ConstrainsGeneral#getContexts <em>Contexts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Contexts</em>'.
   * @see modelConverter.use_language.use.ConstrainsGeneral#getContexts()
   * @see #getConstrainsGeneral()
   * @generated
   */
  EReference getConstrainsGeneral_Contexts();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.ContextsType <em>Contexts Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Contexts Type</em>'.
   * @see modelConverter.use_language.use.ContextsType
   * @generated
   */
  EClass getContextsType();

  /**
   * Returns the meta object for the reference '{@link modelConverter.use_language.use.ContextsType#getClassname <em>Classname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Classname</em>'.
   * @see modelConverter.use_language.use.ContextsType#getClassname()
   * @see #getContextsType()
   * @generated
   */
  EReference getContextsType_Classname();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.InvariantContext <em>Invariant Context</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Invariant Context</em>'.
   * @see modelConverter.use_language.use.InvariantContext
   * @generated
   */
  EClass getInvariantContext();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.InvariantContext#getVariablename <em>Variablename</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Variablename</em>'.
   * @see modelConverter.use_language.use.InvariantContext#getVariablename()
   * @see #getInvariantContext()
   * @generated
   */
  EAttribute getInvariantContext_Variablename();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.InvariantContext#getInvariants <em>Invariants</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Invariants</em>'.
   * @see modelConverter.use_language.use.InvariantContext#getInvariants()
   * @see #getInvariantContext()
   * @generated
   */
  EReference getInvariantContext_Invariants();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.InvariantDefinition <em>Invariant Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Invariant Definition</em>'.
   * @see modelConverter.use_language.use.InvariantDefinition
   * @generated
   */
  EClass getInvariantDefinition();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.InvariantDefinition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.InvariantDefinition#getName()
   * @see #getInvariantDefinition()
   * @generated
   */
  EAttribute getInvariantDefinition_Name();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.InvariantDefinition#getOclexpression <em>Oclexpression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Oclexpression</em>'.
   * @see modelConverter.use_language.use.InvariantDefinition#getOclexpression()
   * @see #getInvariantDefinition()
   * @generated
   */
  EAttribute getInvariantDefinition_Oclexpression();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationContext <em>Operation Context</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Context</em>'.
   * @see modelConverter.use_language.use.OperationContext
   * @generated
   */
  EClass getOperationContext();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.OperationContext#getConstrains <em>Constrains</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constrains</em>'.
   * @see modelConverter.use_language.use.OperationContext#getConstrains()
   * @see #getOperationContext()
   * @generated
   */
  EReference getOperationContext_Constrains();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.OperationConstraints <em>Operation Constraints</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Operation Constraints</em>'.
   * @see modelConverter.use_language.use.OperationConstraints
   * @generated
   */
  EClass getOperationConstraints();

  /**
   * Returns the meta object for the containment reference '{@link modelConverter.use_language.use.OperationConstraints#getOperationDeclaration <em>Operation Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operation Declaration</em>'.
   * @see modelConverter.use_language.use.OperationConstraints#getOperationDeclaration()
   * @see #getOperationConstraints()
   * @generated
   */
  EReference getOperationConstraints_OperationDeclaration();

  /**
   * Returns the meta object for the containment reference list '{@link modelConverter.use_language.use.OperationConstraints#getConditions <em>Conditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Conditions</em>'.
   * @see modelConverter.use_language.use.OperationConstraints#getConditions()
   * @see #getOperationConstraints()
   * @generated
   */
  EReference getOperationConstraints_Conditions();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.ConditionType <em>Condition Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Condition Type</em>'.
   * @see modelConverter.use_language.use.ConditionType
   * @generated
   */
  EClass getConditionType();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.ConditionType#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see modelConverter.use_language.use.ConditionType#getName()
   * @see #getConditionType()
   * @generated
   */
  EAttribute getConditionType_Name();

  /**
   * Returns the meta object for the attribute '{@link modelConverter.use_language.use.ConditionType#getOclexpression <em>Oclexpression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Oclexpression</em>'.
   * @see modelConverter.use_language.use.ConditionType#getOclexpression()
   * @see #getConditionType()
   * @generated
   */
  EAttribute getConditionType_Oclexpression();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Precondition <em>Precondition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Precondition</em>'.
   * @see modelConverter.use_language.use.Precondition
   * @generated
   */
  EClass getPrecondition();

  /**
   * Returns the meta object for class '{@link modelConverter.use_language.use.Postcondition <em>Postcondition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Postcondition</em>'.
   * @see modelConverter.use_language.use.Postcondition
   * @generated
   */
  EClass getPostcondition();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  UseFactory getUseFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ModelImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODEL__NAME = eINSTANCE.getModel_Name();

    /**
     * The meta object literal for the '<em><b>Enums</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__ENUMS = eINSTANCE.getModel_Enums();

    /**
     * The meta object literal for the '<em><b>Packaged Element</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__PACKAGED_ELEMENT = eINSTANCE.getModel_PackagedElement();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__CONSTRAINTS = eINSTANCE.getModel_Constraints();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.MultiplicityImpl <em>Multiplicity</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.MultiplicityImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getMultiplicity()
     * @generated
     */
    EClass MULTIPLICITY = eINSTANCE.getMultiplicity();

    /**
     * The meta object literal for the '<em><b>Min Value</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLICITY__MIN_VALUE = eINSTANCE.getMultiplicity_MinValue();

    /**
     * The meta object literal for the '<em><b>Max Value</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLICITY__MAX_VALUE = eINSTANCE.getMultiplicity_MaxValue();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AllTypesImpl <em>All Types</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AllTypesImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAllTypes()
     * @generated
     */
    EClass ALL_TYPES = eINSTANCE.getAllTypes();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.TypeImpl <em>Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.TypeImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getType()
     * @generated
     */
    EClass TYPE = eINSTANCE.getType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE__NAME = eINSTANCE.getType_Name();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.CollectionTypeImpl <em>Collection Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.CollectionTypeImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getCollectionType()
     * @generated
     */
    EClass COLLECTION_TYPE = eINSTANCE.getCollectionType();

    /**
     * The meta object literal for the '<em><b>Collection</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COLLECTION_TYPE__COLLECTION = eINSTANCE.getCollectionType_Collection();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COLLECTION_TYPE__TYPE = eINSTANCE.getCollectionType_Type();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AllClassImpl <em>All Class</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AllClassImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAllClass()
     * @generated
     */
    EClass ALL_CLASS = eINSTANCE.getAllClass();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AllClassAndEnumImpl <em>All Class And Enum</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AllClassAndEnumImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAllClassAndEnum()
     * @generated
     */
    EClass ALL_CLASS_AND_ENUM = eINSTANCE.getAllClassAndEnum();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.SimpleTypesImpl <em>Simple Types</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.SimpleTypesImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getSimpleTypes()
     * @generated
     */
    EClass SIMPLE_TYPES = eINSTANCE.getSimpleTypes();

    /**
     * The meta object literal for the '<em><b>Default Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_TYPES__DEFAULT_TYPE = eINSTANCE.getSimpleTypes_DefaultType();

    /**
     * The meta object literal for the '<em><b>Referended</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_TYPES__REFERENDED = eINSTANCE.getSimpleTypes_Referended();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.EnumImpl <em>Enum</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.EnumImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getEnum()
     * @generated
     */
    EClass ENUM = eINSTANCE.getEnum();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENUM__NAME = eINSTANCE.getEnum_Name();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ENUM__ELEMENTS = eINSTANCE.getEnum_Elements();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ClassImpl <em>Class</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ClassImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getClass_()
     * @generated
     */
    EClass CLASS = eINSTANCE.getClass_();

    /**
     * The meta object literal for the '<em><b>Abstract</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLASS__ABSTRACT = eINSTANCE.getClass_Abstract();

    /**
     * The meta object literal for the '<em><b>Generalization</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS__GENERALIZATION = eINSTANCE.getClass_Generalization();

    /**
     * The meta object literal for the '<em><b>Attributes</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS__ATTRIBUTES = eINSTANCE.getClass_Attributes();

    /**
     * The meta object literal for the '<em><b>Operations</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS__OPERATIONS = eINSTANCE.getClass_Operations();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLASS__CONSTRAINTS = eINSTANCE.getClass_Constraints();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.GeneralizationImpl <em>Generalization</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.GeneralizationImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getGeneralization()
     * @generated
     */
    EClass GENERALIZATION = eINSTANCE.getGeneralization();

    /**
     * The meta object literal for the '<em><b>General</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GENERALIZATION__GENERAL = eINSTANCE.getGeneralization_General();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AssociationImpl <em>Association</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AssociationImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAssociation()
     * @generated
     */
    EClass ASSOCIATION = eINSTANCE.getAssociation();

    /**
     * The meta object literal for the '<em><b>Type Association</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSOCIATION__TYPE_ASSOCIATION = eINSTANCE.getAssociation_TypeAssociation();

    /**
     * The meta object literal for the '<em><b>Association Ends</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION__ASSOCIATION_ENDS = eINSTANCE.getAssociation_AssociationEnds();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AssociationEndImpl <em>Association End</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AssociationEndImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAssociationEnd()
     * @generated
     */
    EClass ASSOCIATION_END = eINSTANCE.getAssociationEnd();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_END__TYPE = eINSTANCE.getAssociationEnd_Type();

    /**
     * The meta object literal for the '<em><b>Mul</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_END__MUL = eINSTANCE.getAssociationEnd_Mul();

    /**
     * The meta object literal for the '<em><b>Role</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSOCIATION_END__ROLE = eINSTANCE.getAssociationEnd_Role();

    /**
     * The meta object literal for the '<em><b>Ordered</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSOCIATION_END__ORDERED = eINSTANCE.getAssociationEnd_Ordered();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AssociationClassImpl <em>Association Class</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AssociationClassImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAssociationClass()
     * @generated
     */
    EClass ASSOCIATION_CLASS = eINSTANCE.getAssociationClass();

    /**
     * The meta object literal for the '<em><b>Abstract</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ASSOCIATION_CLASS__ABSTRACT = eINSTANCE.getAssociationClass_Abstract();

    /**
     * The meta object literal for the '<em><b>Generalization</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_CLASS__GENERALIZATION = eINSTANCE.getAssociationClass_Generalization();

    /**
     * The meta object literal for the '<em><b>Association Ends</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_CLASS__ASSOCIATION_ENDS = eINSTANCE.getAssociationClass_AssociationEnds();

    /**
     * The meta object literal for the '<em><b>Attributes</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_CLASS__ATTRIBUTES = eINSTANCE.getAssociationClass_Attributes();

    /**
     * The meta object literal for the '<em><b>Operations</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_CLASS__OPERATIONS = eINSTANCE.getAssociationClass_Operations();

    /**
     * The meta object literal for the '<em><b>Constraints</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSOCIATION_CLASS__CONSTRAINTS = eINSTANCE.getAssociationClass_Constraints();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AttributesBaseImpl <em>Attributes Base</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AttributesBaseImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAttributesBase()
     * @generated
     */
    EClass ATTRIBUTES_BASE = eINSTANCE.getAttributesBase();

    /**
     * The meta object literal for the '<em><b>Attributes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATTRIBUTES_BASE__ATTRIBUTES = eINSTANCE.getAttributesBase_Attributes();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.AttributeImpl <em>Attribute</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.AttributeImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getAttribute()
     * @generated
     */
    EClass ATTRIBUTE = eINSTANCE.getAttribute();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATTRIBUTE__NAME = eINSTANCE.getAttribute_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATTRIBUTE__TYPE = eINSTANCE.getAttribute_Type();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationsBaseImpl <em>Operations Base</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationsBaseImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationsBase()
     * @generated
     */
    EClass OPERATIONS_BASE = eINSTANCE.getOperationsBase();

    /**
     * The meta object literal for the '<em><b>Operations</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATIONS_BASE__OPERATIONS = eINSTANCE.getOperationsBase_Operations();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationTypeImpl <em>Operation Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationTypeImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationType()
     * @generated
     */
    EClass OPERATION_TYPE = eINSTANCE.getOperationType();

    /**
     * The meta object literal for the '<em><b>Operation Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_TYPE__OPERATION_DECLARATION = eINSTANCE.getOperationType_OperationDeclaration();

    /**
     * The meta object literal for the '<em><b>Operationbody</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATION_TYPE__OPERATIONBODY = eINSTANCE.getOperationType_Operationbody();

    /**
     * The meta object literal for the '<em><b>Conditions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_TYPE__CONDITIONS = eINSTANCE.getOperationType_Conditions();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationQueryImpl <em>Operation Query</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationQueryImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationQuery()
     * @generated
     */
    EClass OPERATION_QUERY = eINSTANCE.getOperationQuery();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationComplexImpl <em>Operation Complex</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationComplexImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationComplex()
     * @generated
     */
    EClass OPERATION_COMPLEX = eINSTANCE.getOperationComplex();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationDeclarationImpl <em>Operation Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationDeclarationImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationDeclaration()
     * @generated
     */
    EClass OPERATION_DECLARATION = eINSTANCE.getOperationDeclaration();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPERATION_DECLARATION__NAME = eINSTANCE.getOperationDeclaration_Name();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_DECLARATION__PARAMETERS = eINSTANCE.getOperationDeclaration_Parameters();

    /**
     * The meta object literal for the '<em><b>Return Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_DECLARATION__RETURN_TYPE = eINSTANCE.getOperationDeclaration_ReturnType();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ParameterImpl <em>Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ParameterImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getParameter()
     * @generated
     */
    EClass PARAMETER = eINSTANCE.getParameter();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAMETER__NAME = eINSTANCE.getParameter_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETER__TYPE = eINSTANCE.getParameter_Type();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ConstraintsBaseImpl <em>Constraints Base</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ConstraintsBaseImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getConstraintsBase()
     * @generated
     */
    EClass CONSTRAINTS_BASE = eINSTANCE.getConstraintsBase();

    /**
     * The meta object literal for the '<em><b>Invariants</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINTS_BASE__INVARIANTS = eINSTANCE.getConstraintsBase_Invariants();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ConstrainsGeneralImpl <em>Constrains General</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ConstrainsGeneralImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getConstrainsGeneral()
     * @generated
     */
    EClass CONSTRAINS_GENERAL = eINSTANCE.getConstrainsGeneral();

    /**
     * The meta object literal for the '<em><b>Contexts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTRAINS_GENERAL__CONTEXTS = eINSTANCE.getConstrainsGeneral_Contexts();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ContextsTypeImpl <em>Contexts Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ContextsTypeImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getContextsType()
     * @generated
     */
    EClass CONTEXTS_TYPE = eINSTANCE.getContextsType();

    /**
     * The meta object literal for the '<em><b>Classname</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONTEXTS_TYPE__CLASSNAME = eINSTANCE.getContextsType_Classname();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.InvariantContextImpl <em>Invariant Context</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.InvariantContextImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getInvariantContext()
     * @generated
     */
    EClass INVARIANT_CONTEXT = eINSTANCE.getInvariantContext();

    /**
     * The meta object literal for the '<em><b>Variablename</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INVARIANT_CONTEXT__VARIABLENAME = eINSTANCE.getInvariantContext_Variablename();

    /**
     * The meta object literal for the '<em><b>Invariants</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INVARIANT_CONTEXT__INVARIANTS = eINSTANCE.getInvariantContext_Invariants();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.InvariantDefinitionImpl <em>Invariant Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.InvariantDefinitionImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getInvariantDefinition()
     * @generated
     */
    EClass INVARIANT_DEFINITION = eINSTANCE.getInvariantDefinition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INVARIANT_DEFINITION__NAME = eINSTANCE.getInvariantDefinition_Name();

    /**
     * The meta object literal for the '<em><b>Oclexpression</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INVARIANT_DEFINITION__OCLEXPRESSION = eINSTANCE.getInvariantDefinition_Oclexpression();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationContextImpl <em>Operation Context</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationContextImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationContext()
     * @generated
     */
    EClass OPERATION_CONTEXT = eINSTANCE.getOperationContext();

    /**
     * The meta object literal for the '<em><b>Constrains</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_CONTEXT__CONSTRAINS = eINSTANCE.getOperationContext_Constrains();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.OperationConstraintsImpl <em>Operation Constraints</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.OperationConstraintsImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getOperationConstraints()
     * @generated
     */
    EClass OPERATION_CONSTRAINTS = eINSTANCE.getOperationConstraints();

    /**
     * The meta object literal for the '<em><b>Operation Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_CONSTRAINTS__OPERATION_DECLARATION = eINSTANCE.getOperationConstraints_OperationDeclaration();

    /**
     * The meta object literal for the '<em><b>Conditions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPERATION_CONSTRAINTS__CONDITIONS = eINSTANCE.getOperationConstraints_Conditions();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.ConditionTypeImpl <em>Condition Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.ConditionTypeImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getConditionType()
     * @generated
     */
    EClass CONDITION_TYPE = eINSTANCE.getConditionType();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONDITION_TYPE__NAME = eINSTANCE.getConditionType_Name();

    /**
     * The meta object literal for the '<em><b>Oclexpression</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONDITION_TYPE__OCLEXPRESSION = eINSTANCE.getConditionType_Oclexpression();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.PreconditionImpl <em>Precondition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.PreconditionImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getPrecondition()
     * @generated
     */
    EClass PRECONDITION = eINSTANCE.getPrecondition();

    /**
     * The meta object literal for the '{@link modelConverter.use_language.use.impl.PostconditionImpl <em>Postcondition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see modelConverter.use_language.use.impl.PostconditionImpl
     * @see modelConverter.use_language.use.impl.UsePackageImpl#getPostcondition()
     * @generated
     */
    EClass POSTCONDITION = eINSTANCE.getPostcondition();

  }

} //UsePackage
