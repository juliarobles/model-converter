/**
 * generated by Xtext 2.25.0
 */
package modelConverter.use_language.uml;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Association Class</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link modelConverter.use_language.uml.AssociationClass#isAbstract <em>Abstract</em>}</li>
 *   <li>{@link modelConverter.use_language.uml.AssociationClass#getName <em>Name</em>}</li>
 *   <li>{@link modelConverter.use_language.uml.AssociationClass#getGeneralization <em>Generalization</em>}</li>
 *   <li>{@link modelConverter.use_language.uml.AssociationClass#getMemberEnds <em>Member Ends</em>}</li>
 *   <li>{@link modelConverter.use_language.uml.AssociationClass#getOwnedAttribute <em>Owned Attribute</em>}</li>
 *   <li>{@link modelConverter.use_language.uml.AssociationClass#getOperations <em>Operations</em>}</li>
 *   <li>{@link modelConverter.use_language.uml.AssociationClass#getConstraints <em>Constraints</em>}</li>
 * </ul>
 *
 * @see modelConverter.use_language.uml.UmlPackage#getAssociationClass()
 * @model
 * @generated
 */
public interface AssociationClass extends AssociationType, AllClass
{
  /**
   * Returns the value of the '<em><b>Abstract</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Abstract</em>' attribute.
   * @see #setAbstract(boolean)
   * @see modelConverter.use_language.uml.UmlPackage#getAssociationClass_Abstract()
   * @model
   * @generated
   */
  boolean isAbstract();

  /**
   * Sets the value of the '{@link modelConverter.use_language.uml.AssociationClass#isAbstract <em>Abstract</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Abstract</em>' attribute.
   * @see #isAbstract()
   * @generated
   */
  void setAbstract(boolean value);

  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see modelConverter.use_language.uml.UmlPackage#getAssociationClass_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link modelConverter.use_language.uml.AssociationClass#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Generalization</b></em>' containment reference list.
   * The list contents are of type {@link modelConverter.use_language.uml.Generalization}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Generalization</em>' containment reference list.
   * @see modelConverter.use_language.uml.UmlPackage#getAssociationClass_Generalization()
   * @model containment="true"
   * @generated
   */
  EList<Generalization> getGeneralization();

  /**
   * Returns the value of the '<em><b>Member Ends</b></em>' containment reference list.
   * The list contents are of type {@link modelConverter.use_language.uml.MemberEnd}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Member Ends</em>' containment reference list.
   * @see modelConverter.use_language.uml.UmlPackage#getAssociationClass_MemberEnds()
   * @model containment="true"
   * @generated
   */
  EList<MemberEnd> getMemberEnds();

  /**
   * Returns the value of the '<em><b>Owned Attribute</b></em>' containment reference list.
   * The list contents are of type {@link modelConverter.use_language.uml.Attribute}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Owned Attribute</em>' containment reference list.
   * @see modelConverter.use_language.uml.UmlPackage#getAssociationClass_OwnedAttribute()
   * @model containment="true"
   * @generated
   */
  EList<Attribute> getOwnedAttribute();

  /**
   * Returns the value of the '<em><b>Operations</b></em>' containment reference list.
   * The list contents are of type {@link modelConverter.use_language.uml.OperationType}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Operations</em>' containment reference list.
   * @see modelConverter.use_language.uml.UmlPackage#getAssociationClass_Operations()
   * @model containment="true"
   * @generated
   */
  EList<OperationType> getOperations();

  /**
   * Returns the value of the '<em><b>Constraints</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Constraints</em>' containment reference.
   * @see #setConstraints(ConstraintsBase)
   * @see modelConverter.use_language.uml.UmlPackage#getAssociationClass_Constraints()
   * @model containment="true"
   * @generated
   */
  ConstraintsBase getConstraints();

  /**
   * Sets the value of the '{@link modelConverter.use_language.uml.AssociationClass#getConstraints <em>Constraints</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Constraints</em>' containment reference.
   * @see #getConstraints()
   * @generated
   */
  void setConstraints(ConstraintsBase value);

} // AssociationClass
